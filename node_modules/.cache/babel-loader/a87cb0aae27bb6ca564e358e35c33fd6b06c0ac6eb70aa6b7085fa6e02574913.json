{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\sleep.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, LineElement, CategoryScale, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, Title, Tooltip, Legend);\nconst SleepTracker = () => {\n  _s();\n  const [sleepHours, setSleepHours] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [graphData, setGraphData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Hours of Sleep\",\n      data: [],\n      fill: false,\n      borderColor: \"#4B9CD3\",\n      tension: 0.4,\n      borderWidth: 3\n    }]\n  });\n  useEffect(() => {\n    // Fetch sleep data for the last 7 days\n    axios.get(\"http://localhost:5000/api/users/sleep\", {\n      withCredentials: true\n    }).then(response => {\n      const {\n        sleepHours,\n        last7Days\n      } = response.data;\n      setGraphData({\n        labels: last7Days,\n        datasets: [{\n          label: \"Hours of Sleep\",\n          data: sleepHours,\n          fill: false,\n          borderColor: \"#4B9CD3\",\n          tension: 0.4,\n          borderWidth: 3\n        }]\n      });\n    }).catch(err => {\n      console.error(\"Error fetching sleep data\", err);\n      setError(\"Error fetching sleep data\");\n    });\n  }, []);\n  const handleSleepChange = e => {\n    setSleepHours(e.target.value);\n  };\n  const handleSleepSubmit = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const date = new Date().toLocaleDateString();\n      await axios.post(\"http://localhost:5000/api/users/sleep\", {\n        date,\n        hours: sleepHours\n      }, {\n        withCredentials: true\n      });\n\n      // Update graph with the new sleep data\n      setGraphData(prevData => {\n        const newLabels = [...prevData.labels, date];\n        const newData = [...prevData.datasets[0].data, sleepHours];\n        return {\n          labels: newLabels,\n          datasets: [{\n            ...prevData.datasets[0],\n            data: newData\n          }]\n        };\n      });\n      setLoading(false);\n    } catch (error) {\n      setError(\"Error saving sleep data.\");\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sleep Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: sleepHours || \"\",\n      onChange: handleSleepChange,\n      min: \"0\",\n      max: \"24\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSleepSubmit,\n      disabled: loading,\n      children: loading ? \"Submitting...\" : \"Add Sleep\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(SleepTracker, \"0bP3YoM93Dln9/sXuGG29QfyVSI=\");\n_c = SleepTracker;\nexport default SleepTracker;\nvar _c;\n$RefreshReg$(_c, \"SleepTracker\");","map":{"version":3,"names":["React","useState","useEffect","Line","axios","Chart","ChartJS","LineElement","CategoryScale","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","SleepTracker","_s","sleepHours","setSleepHours","loading","setLoading","error","setError","graphData","setGraphData","labels","datasets","label","data","fill","borderColor","tension","borderWidth","get","withCredentials","then","response","last7Days","catch","err","console","handleSleepChange","e","target","value","handleSleepSubmit","date","Date","toLocaleDateString","post","hours","prevData","newLabels","newData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","max","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/sleep.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { Chart as ChartJS, LineElement, CategoryScale, Title, Tooltip, Legend } from \"chart.js\";\r\n\r\nChartJS.register(LineElement, CategoryScale, Title, Tooltip, Legend);\r\n\r\nconst SleepTracker = () => {\r\n  const [sleepHours, setSleepHours] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Hours of Sleep\",\r\n        data: [],\r\n        fill: false,\r\n        borderColor: \"#4B9CD3\",\r\n        tension: 0.4,\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch sleep data for the last 7 days\r\n    axios\r\n      .get(\"http://localhost:5000/api/users/sleep\", { withCredentials: true })\r\n      .then((response) => {\r\n        const { sleepHours, last7Days } = response.data;\r\n\r\n        setGraphData({\r\n          labels: last7Days,\r\n          datasets: [\r\n            {\r\n              label: \"Hours of Sleep\",\r\n              data: sleepHours,\r\n              fill: false,\r\n              borderColor: \"#4B9CD3\",\r\n              tension: 0.4,\r\n              borderWidth: 3,\r\n            },\r\n          ],\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Error fetching sleep data\", err);\r\n        setError(\"Error fetching sleep data\");\r\n      });\r\n  }, []);\r\n\r\n  const handleSleepChange = (e) => {\r\n    setSleepHours(e.target.value);\r\n  };\r\n\r\n  const handleSleepSubmit = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const date = new Date().toLocaleDateString();\r\n      await axios.post(\r\n        \"http://localhost:5000/api/users/sleep\",\r\n        { date, hours: sleepHours },\r\n        { withCredentials: true }\r\n      );\r\n\r\n      // Update graph with the new sleep data\r\n      setGraphData((prevData) => {\r\n        const newLabels = [...prevData.labels, date];\r\n        const newData = [...prevData.datasets[0].data, sleepHours];\r\n        return {\r\n          labels: newLabels,\r\n          datasets: [\r\n            {\r\n              ...prevData.datasets[0],\r\n              data: newData,\r\n            },\r\n          ],\r\n        };\r\n      });\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(\"Error saving sleep data.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Sleep Tracker</h2>\r\n      <input\r\n        type=\"number\"\r\n        value={sleepHours || \"\"}\r\n        onChange={handleSleepChange}\r\n        min=\"0\"\r\n        max=\"24\"\r\n      />\r\n      <button onClick={handleSleepSubmit} disabled={loading}>\r\n        {loading ? \"Submitting...\" : \"Add Sleep\"}\r\n      </button>\r\n\r\n      {error && <div>{error}</div>}\r\n\r\n      <Line data={graphData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SleepTracker;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,IAAIC,OAAO,EAAEC,WAAW,EAAEC,aAAa,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhGP,OAAO,CAACQ,QAAQ,CAACP,WAAW,EAAEC,aAAa,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEpE,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC;IACzCwB,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,gBAAgB;MACvBC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,GAAG;MACZC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;EAEF9B,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACF6B,GAAG,CAAC,uCAAuC,EAAE;MAAEC,eAAe,EAAE;IAAK,CAAC,CAAC,CACvEC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAM;QAAEnB,UAAU;QAAEoB;MAAU,CAAC,GAAGD,QAAQ,CAACR,IAAI;MAE/CJ,YAAY,CAAC;QACXC,MAAM,EAAEY,SAAS;QACjBX,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,gBAAgB;UACvBC,IAAI,EAAEX,UAAU;UAChBY,IAAI,EAAE,KAAK;UACXC,WAAW,EAAE,SAAS;UACtBC,OAAO,EAAE,GAAG;UACZC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC,CAAC;IACJ,CAAC,CAAC,CACDM,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACnB,KAAK,CAAC,2BAA2B,EAAEkB,GAAG,CAAC;MAC/CjB,QAAQ,CAAC,2BAA2B,CAAC;IACvC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,iBAAiB,GAAIC,CAAC,IAAK;IAC/BxB,aAAa,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCzB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMwB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;MAC5C,MAAM5C,KAAK,CAAC6C,IAAI,CACd,uCAAuC,EACvC;QAAEH,IAAI;QAAEI,KAAK,EAAEjC;MAAW,CAAC,EAC3B;QAAEiB,eAAe,EAAE;MAAK,CAC1B,CAAC;;MAED;MACAV,YAAY,CAAE2B,QAAQ,IAAK;QACzB,MAAMC,SAAS,GAAG,CAAC,GAAGD,QAAQ,CAAC1B,MAAM,EAAEqB,IAAI,CAAC;QAC5C,MAAMO,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAACzB,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,EAAEX,UAAU,CAAC;QAC1D,OAAO;UACLQ,MAAM,EAAE2B,SAAS;UACjB1B,QAAQ,EAAE,CACR;YACE,GAAGyB,QAAQ,CAACzB,QAAQ,CAAC,CAAC,CAAC;YACvBE,IAAI,EAAEyB;UACR,CAAC;QAEL,CAAC;MACH,CAAC,CAAC;MACFjC,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,QAAQ,CAAC,0BAA0B,CAAC;MACpCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB7C,OAAA;MACE8C,IAAI,EAAC,QAAQ;MACbf,KAAK,EAAE3B,UAAU,IAAI,EAAG;MACxB2C,QAAQ,EAAEnB,iBAAkB;MAC5BoB,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eACF7C,OAAA;MAAQkD,OAAO,EAAElB,iBAAkB;MAACmB,QAAQ,EAAE7C,OAAQ;MAAAmC,QAAA,EACnDnC,OAAO,GAAG,eAAe,GAAG;IAAW;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EAERrC,KAAK,iBAAIR,OAAA;MAAAyC,QAAA,EAAMjC;IAAK;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE5B7C,OAAA,CAACV,IAAI;MAACyB,IAAI,EAAEL;IAAU;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAAC1C,EAAA,CApGID,YAAY;AAAAkD,EAAA,GAAZlD,YAAY;AAsGlB,eAAeA,YAAY;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}