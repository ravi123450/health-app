{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\log break fast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './log.css'; // Ensure your CSS is in the log.css file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogFoodPage = () => {\n  _s();\n  const [foodInput, setFoodInput] = useState('');\n  const [quantity, setQuantity] = useState(100);\n  const [unit, setUnit] = useState(1);\n  const [suggestions, setSuggestions] = useState([]);\n  const [foodData, setFoodData] = useState({});\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [totalCalories, setTotalCalories] = useState(0);\n\n  // Fetch total calorie intake on page load\n  useEffect(() => {\n    fetchTotalCalories();\n  }, []);\n\n  // Fetch total calories from the backend\n  const fetchTotalCalories = async () => {\n    try {\n      const token = localStorage.getItem('token'); // Assuming JWT token is stored in localStorage\n      const response = await fetch('http://localhost:5001/user-calories', {\n        headers: {\n          'Authorization': `Bearer ${token}` // Send token in headers for authentication\n        }\n      });\n      const data = await response.json();\n      setTotalCalories(data.totalCalories);\n    } catch (error) {\n      console.error(\"Error fetching total calories:\", error);\n    }\n  };\n\n  // Handle search input change and fetch suggestions\n  const handleSearchChange = async e => {\n    const searchTerm = e.target.value;\n    setFoodInput(searchTerm);\n    if (!searchTerm.trim()) {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5001/search?query=${searchTerm}`);\n      const data = await response.json();\n      setSuggestions(data);\n      console.log(\"Suggestions fetched:\", data); // Check what data is returned\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Fetch product details and show in popup\n  const getProduct = async code => {\n    const response = await fetch(`http://localhost:5001/product/${code}`);\n    const data = await response.json();\n    const adjustedQuantity = quantity || 100; // Default to 100 if quantity is not provided\n\n    setFoodData({\n      ...data,\n      calories: data.calories * adjustedQuantity / 100,\n      carbs: data.carbs * adjustedQuantity / 100,\n      proteins: data.proteins * adjustedQuantity / 100,\n      fats: data.fats * adjustedQuantity / 100\n    });\n    setPopupVisible(true);\n  };\n\n  // Close popup\n  const closePopup = () => {\n    setPopupVisible(false);\n    setFoodInput(''); // Clear the input when closing popup\n  };\n\n  // Save food data to the database and update user calorie intake\n  const saveData = async () => {\n    const token = localStorage.getItem('token'); // Assuming JWT token is stored in localStorage\n\n    const data = {\n      code: foodData.code,\n      name: foodData.name,\n      calories: foodData.calories,\n      carbs: foodData.carbs,\n      proteins: foodData.proteins,\n      fats: foodData.fats\n    };\n    const response = await fetch('http://localhost:5001/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}` // Send token in headers for authentication\n      },\n      body: JSON.stringify(data)\n    });\n    if (response.ok) {\n      alert('Food saved successfully');\n      // After saving food, update user total calories\n      fetchTotalCalories(); // Refresh the total calorie count\n      closePopup(); // Close popup after saving\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-food-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for a Food Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Calories: \", totalCalories]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: foodInput,\n        onChange: handleSearchChange,\n        placeholder: \"Enter food name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantity,\n        onChange: e => setQuantity(Number(e.target.value)),\n        placeholder: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setUnit(Number(e.target.value)),\n        value: unit,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"gm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0.001,\n          children: \"mg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1000,\n          children: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"suggestions\",\n      className: \"suggestions\",\n      children: suggestions.length > 0 ? suggestions.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => getProduct(product.code),\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }, this)\n      }, product.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No suggestions available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), popupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"popupContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [foodData.name, \" (\", quantity, \"g)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Calories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 28\n          }, this), \" \", foodData.calories.toFixed(2), \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Carbohydrates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 28\n          }, this), \" \", foodData.carbs.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Proteins:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 28\n          }, this), \" \", foodData.proteins.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 28\n          }, this), \" \", foodData.fats.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveData,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(LogFoodPage, \"WhANtXT36PcTh4eS8UOqn+qM6Ds=\");\n_c = LogFoodPage;\nexport default LogFoodPage;\nvar _c;\n$RefreshReg$(_c, \"LogFoodPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LogFoodPage","_s","foodInput","setFoodInput","quantity","setQuantity","unit","setUnit","suggestions","setSuggestions","foodData","setFoodData","popupVisible","setPopupVisible","totalCalories","setTotalCalories","fetchTotalCalories","token","localStorage","getItem","response","fetch","headers","data","json","error","console","handleSearchChange","e","searchTerm","target","value","trim","log","getProduct","code","adjustedQuantity","calories","carbs","proteins","fats","closePopup","saveData","name","method","body","JSON","stringify","ok","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","Number","id","length","map","product","onClick","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/log break fast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './log.css'; // Ensure your CSS is in the log.css file\r\n\r\nconst LogFoodPage = () => {\r\n    const [foodInput, setFoodInput] = useState('');\r\n    const [quantity, setQuantity] = useState(100);\r\n    const [unit, setUnit] = useState(1);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [foodData, setFoodData] = useState({});\r\n    const [popupVisible, setPopupVisible] = useState(false);\r\n    const [totalCalories, setTotalCalories] = useState(0);\r\n\r\n    // Fetch total calorie intake on page load\r\n    useEffect(() => {\r\n        fetchTotalCalories();\r\n    }, []);\r\n\r\n    // Fetch total calories from the backend\r\n    const fetchTotalCalories = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token'); // Assuming JWT token is stored in localStorage\r\n            const response = await fetch('http://localhost:5001/user-calories', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}` // Send token in headers for authentication\r\n                }\r\n            });\r\n            const data = await response.json();\r\n            setTotalCalories(data.totalCalories);\r\n        } catch (error) {\r\n            console.error(\"Error fetching total calories:\", error);\r\n        }\r\n    };\r\n\r\n    // Handle search input change and fetch suggestions\r\n    const handleSearchChange = async (e) => {\r\n        const searchTerm = e.target.value;\r\n        setFoodInput(searchTerm);\r\n\r\n        if (!searchTerm.trim()) {\r\n            setSuggestions([]);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5001/search?query=${searchTerm}`);\r\n            const data = await response.json();\r\n            setSuggestions(data);\r\n            console.log(\"Suggestions fetched:\", data);  // Check what data is returned\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch product details and show in popup\r\n    const getProduct = async (code) => {\r\n        const response = await fetch(`http://localhost:5001/product/${code}`);\r\n        const data = await response.json();\r\n        \r\n        const adjustedQuantity = quantity || 100; // Default to 100 if quantity is not provided\r\n        \r\n        setFoodData({\r\n            ...data,\r\n            calories: (data.calories * adjustedQuantity) / 100,\r\n            carbs: (data.carbs * adjustedQuantity) / 100,\r\n            proteins: (data.proteins * adjustedQuantity) / 100,\r\n            fats: (data.fats * adjustedQuantity) / 100\r\n        });\r\n\r\n        setPopupVisible(true);\r\n    };\r\n\r\n    // Close popup\r\n    const closePopup = () => {\r\n        setPopupVisible(false);\r\n        setFoodInput(''); // Clear the input when closing popup\r\n    };\r\n\r\n    // Save food data to the database and update user calorie intake\r\n    const saveData = async () => {\r\n        const token = localStorage.getItem('token'); // Assuming JWT token is stored in localStorage\r\n\r\n        const data = {\r\n            code: foodData.code,\r\n            name: foodData.name,\r\n            calories: foodData.calories,\r\n            carbs: foodData.carbs,\r\n            proteins: foodData.proteins,\r\n            fats: foodData.fats\r\n        };\r\n\r\n        const response = await fetch('http://localhost:5001/save', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}` // Send token in headers for authentication\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert('Food saved successfully');\r\n            // After saving food, update user total calories\r\n            fetchTotalCalories(); // Refresh the total calorie count\r\n            closePopup(); // Close popup after saving\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"log-food-page\">\r\n            <h1>Search for a Food Product</h1>\r\n            <p>Total Calories: {totalCalories}</p>\r\n\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={foodInput}\r\n                    onChange={handleSearchChange}\r\n                    placeholder=\"Enter food name\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={quantity}\r\n                    onChange={(e) => setQuantity(Number(e.target.value))}\r\n                    placeholder=\"100\"\r\n                />\r\n                <select onChange={(e) => setUnit(Number(e.target.value))} value={unit}>\r\n                    <option value={1}>gm</option>\r\n                    <option value={0.001}>mg</option>\r\n                    <option value={1000}>kg</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div id=\"suggestions\" className=\"suggestions\">\r\n                {suggestions.length > 0 ? (\r\n                    suggestions.map((product) => (\r\n                        <div key={product.code} onClick={() => getProduct(product.code)}>\r\n                            <strong>{product.name}</strong>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No suggestions available</p>\r\n                )}\r\n            </div>\r\n\r\n            {popupVisible && (\r\n                <div className=\"popup\">\r\n                    <div id=\"popupContent\">\r\n                        <h2>{foodData.name} ({quantity}g)</h2>\r\n                        <p><strong>Calories:</strong> {foodData.calories.toFixed(2)} kcal</p>\r\n                        <p><strong>Carbohydrates:</strong> {foodData.carbs.toFixed(2)} g</p>\r\n                        <p><strong>Proteins:</strong> {foodData.proteins.toFixed(2)} g</p>\r\n                        <p><strong>Fats:</strong> {foodData.fats.toFixed(2)} g</p>\r\n                    </div>\r\n                    <button onClick={saveData}>Save</button>\r\n                    <button onClick={closePopup}>Close</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogFoodPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}