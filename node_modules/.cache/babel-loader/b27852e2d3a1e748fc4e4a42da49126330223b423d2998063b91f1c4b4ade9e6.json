{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\logfood\\\\log-food-page.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './log.css'; // Ensure your CSS is in the log.css file\nimport { Pie } from 'react-chartjs-2'; // Importing Pie chart from react-chartjs-2\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js'; // Chart.js setup\n\n// Registering the chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nconst LogFoodPage = () => {\n  _s();\n  const [foodInput, setFoodInput] = useState('');\n  const [quantity, setQuantity] = useState(100);\n  const [unit, setUnit] = useState(1);\n  const [mealType, setMealType] = useState('breakfast'); // Meal type is always breakfast\n  const [suggestions, setSuggestions] = useState([]);\n  const [foodData, setFoodData] = useState({});\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [recommendedCalories, setRecommendedCalories] = useState(360); // Recommended calories for breakfast (fixed)\n  const [loggedCalories, setLoggedCalories] = useState(0); // Logged calories for breakfast on selected date\n  const [macroNutrients, setMacroNutrients] = useState({\n    carbs: 0,\n    proteins: 0,\n    fats: 0,\n    magnesium: 0,\n    sodium: 0\n  });\n  const [selectedDate, setSelectedDate] = useState(''); // Store selected date\n  const [recommendedtotalCalories, setRecommendedtotalCalories] = useState(0);\n\n  // Fetch total calorie intake and user profile data on page load\n  useEffect(() => {\n    fetchTotalCalories();\n    fetchMacroNutrients();\n    fetchLoggedBreakfastData(); // Fetch logged breakfast data for the selected date\n  }, [mealType, selectedDate]); // Fetch data whenever the meal type or date changes\n\n  // Fetch total calories for the user\n  const fetchTotalCalories = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/user-calories', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setTotalCalories(data.totalCalories);\n    } catch (error) {\n      console.error(\"Error fetching total calories:\", error);\n    }\n  };\n\n  // Fetch macro nutrients from the user profile\n  const fetchMacroNutrients = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/users/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setMacroNutrients({\n        carbs: data.macros.carbs || 0,\n        proteins: data.macros.protein || 0,\n        fats: data.macros.fats || 0,\n        magnesium: data.macros.magnesium || 0,\n        sodium: data.macros.sodium || 0\n      });\n    } catch (error) {\n      console.error(\"Error fetching macro nutrients:\", error);\n    }\n  };\n\n  // Fetch logged calories and macro nutrients for breakfast on the selected date\n  const fetchLoggedBreakfastData = async () => {\n    if (!selectedDate) return; // Don't fetch if no date selected\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch(`http://localhost:5001/save?mealType=${mealType}&date=${selectedDate}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setLoggedCalories(data.totalCalories); // Total calories logged for breakfast\n      setMacroNutrients({\n        carbs: data.macros.carbs || 0,\n        proteins: data.macros.protein || 0,\n        fats: data.macros.fats || 0,\n        magnesium: data.macros.magnesium || 0,\n        sodium: data.macros.sodium || 0\n      });\n    } catch (error) {\n      console.error(\"Error fetching logged breakfast data:\", error);\n    }\n  };\n\n  // Handle search input change and fetch suggestions\n  const handleSearchChange = async e => {\n    const searchTerm = e.target.value.trim();\n    setFoodInput(searchTerm);\n    if (searchTerm === \"\") {\n      setSuggestions([]);\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5001/search?query=${searchTerm}`);\n      const data = await response.json();\n      setSuggestions(data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  // Fetch product details and show in popup\n  const getProduct = async code => {\n    const response = await fetch(`http://localhost:5001/product/${code}`);\n    const data = await response.json();\n    const adjustedQuantity = quantity || 100;\n    setFoodData({\n      ...data,\n      calories: data.calories * adjustedQuantity / 100,\n      carbs: data.carbs * adjustedQuantity / 100,\n      proteins: data.proteins * adjustedQuantity / 100,\n      fats: data.fats * adjustedQuantity / 100\n    });\n    setSuggestions([]);\n    setPopupVisible(true);\n  };\n\n  // Close popup\n  const closePopup = () => {\n    setPopupVisible(false);\n    setFoodInput('');\n  };\n\n  // Save food data to the database with meal type (breakfast, lunch, dinner)\n  const saveData = async () => {\n    const token = localStorage.getItem('token');\n    const data = {\n      code: foodData.code,\n      name: foodData.name,\n      calories: foodData.calories,\n      carbs: foodData.carbs,\n      proteins: foodData.proteins,\n      fats: foodData.fats,\n      mealType: mealType // Include meal type in the data\n    };\n    const response = await fetch('http://localhost:5001/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    });\n    if (response.ok) {\n      alert('Food saved successfully');\n      fetchTotalCalories();\n      setSuggestions([]);\n      closePopup();\n    }\n  };\n\n  // Pie Chart Data for Macro Nutrients{total calorie intake}\n  const calorieData = {\n    labels: [\"Carbs\", \"Proteins\", \"Fats\", \"Magnesium\", \"Sodium\"],\n    datasets: [{\n      data: [macroNutrients.carbs, macroNutrients.proteins, macroNutrients.fats, macroNutrients.magnesium, macroNutrients.sodium],\n      backgroundColor: [\"#FF6B6B\", \"#4ECDC4\", \"#FFD166\", \"#1E90FF\", \"#6A0572\"],\n      borderColor: [\"#FF3B3B\", \"#4AACC4\", \"#FFAA33\", \"#1871C9\", \"#690D62\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-food-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for a Food Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Calories: \", totalCalories]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: foodInput,\n        onChange: handleSearchChange,\n        placeholder: \"Enter food name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantity,\n        onChange: e => setQuantity(Number(e.target.value)),\n        placeholder: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setUnit(Number(e.target.value)),\n        value: unit,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"gm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0.001,\n          children: \"mg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1000,\n          children: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"suggestions\",\n      className: \"suggestions\",\n      children: suggestions.length > 0 ? suggestions.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => getProduct(product.code),\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }, this)\n      }, product.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No suggestions available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box total-calorie-intake\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Total Calorie Intake \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          style: {\n            width: `${totalCalories / recommendedCalories * 100}%`,\n            height: `${totalCalories / recommendedCalories * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logged-text\",\n        children: [\"Logged: \", totalCalories, \" / \", recommendedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"macro-nutrients-pie-chart\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: calorieData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box breakfast-nutrition\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Breakfast Nutrition for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          style: {\n            width: `${loggedCalories / recommendedCalories * 100}%`,\n            height: `${loggedCalories / recommendedCalories * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logged-text\",\n        children: [\"Logged: \", loggedCalories, \" / \", recommendedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"macro-nutrients-pie-chart\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: calorieData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), popupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"popupContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [foodData.name, \" (\", quantity, \"g)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Calories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 28\n          }, this), \" \", foodData.calories.toFixed(2), \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Carbohydrates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 28\n          }, this), \" \", foodData.carbs.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Proteins:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 28\n          }, this), \" \", foodData.proteins.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 28\n          }, this), \" \", foodData.fats.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveData,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 9\n  }, this);\n};\n_s(LogFoodPage, \"VdVvyY4XdzbBRwGM44VSAamc7jI=\");\n_c = LogFoodPage;\nexport default LogFoodPage;\nvar _c;\n$RefreshReg$(_c, \"LogFoodPage\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Chart","ChartJS","ArcElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","LogFoodPage","_s","foodInput","setFoodInput","quantity","setQuantity","unit","setUnit","mealType","setMealType","suggestions","setSuggestions","foodData","setFoodData","popupVisible","setPopupVisible","totalCalories","setTotalCalories","recommendedCalories","setRecommendedCalories","loggedCalories","setLoggedCalories","macroNutrients","setMacroNutrients","carbs","proteins","fats","magnesium","sodium","selectedDate","setSelectedDate","recommendedtotalCalories","setRecommendedtotalCalories","fetchTotalCalories","fetchMacroNutrients","fetchLoggedBreakfastData","token","localStorage","getItem","response","fetch","headers","data","json","error","console","macros","protein","handleSearchChange","e","searchTerm","target","value","trim","getProduct","code","adjustedQuantity","calories","closePopup","saveData","name","method","body","JSON","stringify","ok","alert","calorieData","labels","datasets","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","Number","id","length","map","product","onClick","style","width","height","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/logfood/log-food-page.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './log.css'; // Ensure your CSS is in the log.css file\r\nimport { Pie } from 'react-chartjs-2';  // Importing Pie chart from react-chartjs-2\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from 'chart.js';  // Chart.js setup\r\n\r\n// Registering the chart components\r\nChartJS.register(ArcElement, Tooltip, Legend);\r\n\r\nconst LogFoodPage = () => {\r\n    const [foodInput, setFoodInput] = useState('');\r\n    const [quantity, setQuantity] = useState(100);\r\n    const [unit, setUnit] = useState(1);\r\n    const [mealType, setMealType] = useState('breakfast'); // Meal type is always breakfast\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [foodData, setFoodData] = useState({});\r\n    const [popupVisible, setPopupVisible] = useState(false);\r\n    const [totalCalories, setTotalCalories] = useState(0);\r\n    const [recommendedCalories, setRecommendedCalories] = useState(360); // Recommended calories for breakfast (fixed)\r\n    const [loggedCalories, setLoggedCalories] = useState(0); // Logged calories for breakfast on selected date\r\n    const [macroNutrients, setMacroNutrients] = useState({ carbs: 0, proteins: 0, fats: 0, magnesium: 0, sodium: 0 });\r\n    const [selectedDate, setSelectedDate] = useState(''); // Store selected date\r\n    const [recommendedtotalCalories, setRecommendedtotalCalories] = useState(0);\r\n\r\n    // Fetch total calorie intake and user profile data on page load\r\n    useEffect(() => {\r\n        fetchTotalCalories();\r\n        fetchMacroNutrients();\r\n        fetchLoggedBreakfastData(); // Fetch logged breakfast data for the selected date\r\n    }, [mealType, selectedDate]); // Fetch data whenever the meal type or date changes\r\n\r\n    // Fetch total calories for the user\r\n    const fetchTotalCalories = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch('http://localhost:5001/user-calories', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            setTotalCalories(data.totalCalories);\r\n        } catch (error) {\r\n            console.error(\"Error fetching total calories:\", error);\r\n        }\r\n    };\r\n\r\n    // Fetch macro nutrients from the user profile\r\n    const fetchMacroNutrients = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch('http://localhost:5000/api/users/profile', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            setMacroNutrients({\r\n                carbs: data.macros.carbs || 0,\r\n                proteins: data.macros.protein || 0,\r\n                fats: data.macros.fats || 0,\r\n                magnesium: data.macros.magnesium || 0,\r\n                sodium: data.macros.sodium || 0,\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error fetching macro nutrients:\", error);\r\n        }\r\n    };\r\n\r\n    // Fetch logged calories and macro nutrients for breakfast on the selected date\r\n    const fetchLoggedBreakfastData = async () => {\r\n        if (!selectedDate) return; // Don't fetch if no date selected\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch(`http://localhost:5001/save?mealType=${mealType}&date=${selectedDate}`, {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            setLoggedCalories(data.totalCalories); // Total calories logged for breakfast\r\n            setMacroNutrients({\r\n                carbs: data.macros.carbs || 0,\r\n                proteins: data.macros.protein || 0,\r\n                fats: data.macros.fats || 0,\r\n                magnesium: data.macros.magnesium || 0,\r\n                sodium: data.macros.sodium || 0,\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error fetching logged breakfast data:\", error);\r\n        }\r\n    };\r\n\r\n    // Handle search input change and fetch suggestions\r\n    const handleSearchChange = async (e) => {\r\n        const searchTerm = e.target.value.trim();\r\n        setFoodInput(searchTerm);\r\n\r\n        if (searchTerm === \"\") {\r\n            setSuggestions([]);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`http://localhost:5001/search?query=${searchTerm}`);\r\n            const data = await response.json();\r\n            setSuggestions(data);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n        }\r\n    };\r\n\r\n    // Fetch product details and show in popup\r\n    const getProduct = async (code) => {\r\n        const response = await fetch(`http://localhost:5001/product/${code}`);\r\n        const data = await response.json();\r\n\r\n        const adjustedQuantity = quantity || 100;\r\n\r\n        setFoodData({\r\n            ...data,\r\n            calories: (data.calories * adjustedQuantity) / 100,\r\n            carbs: (data.carbs * adjustedQuantity) / 100,\r\n            proteins: (data.proteins * adjustedQuantity) / 100,\r\n            fats: (data.fats * adjustedQuantity) / 100,\r\n        });\r\n\r\n        setSuggestions([]);\r\n        setPopupVisible(true);\r\n    };\r\n\r\n    // Close popup\r\n    const closePopup = () => {\r\n        setPopupVisible(false);\r\n        setFoodInput('');\r\n    };\r\n\r\n    // Save food data to the database with meal type (breakfast, lunch, dinner)\r\n    const saveData = async () => {\r\n        const token = localStorage.getItem('token');\r\n\r\n        const data = {\r\n            code: foodData.code,\r\n            name: foodData.name,\r\n            calories: foodData.calories,\r\n            carbs: foodData.carbs,\r\n            proteins: foodData.proteins,\r\n            fats: foodData.fats,\r\n            mealType: mealType, // Include meal type in the data\r\n        };\r\n\r\n        const response = await fetch('http://localhost:5001/save', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`,\r\n            },\r\n            body: JSON.stringify(data),\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert('Food saved successfully');\r\n            fetchTotalCalories();\r\n            setSuggestions([]);\r\n            closePopup();\r\n        }\r\n    };\r\n\r\n    // Pie Chart Data for Macro Nutrients{total calorie intake}\r\n    const calorieData = {\r\n        labels: [\"Carbs\", \"Proteins\", \"Fats\", \"Magnesium\", \"Sodium\"],\r\n        datasets: [\r\n            {\r\n                data: [\r\n                    macroNutrients.carbs,\r\n                    macroNutrients.proteins,\r\n                    macroNutrients.fats,\r\n                    macroNutrients.magnesium,\r\n                    macroNutrients.sodium\r\n                ],\r\n                backgroundColor: [\"#FF6B6B\", \"#4ECDC4\", \"#FFD166\", \"#1E90FF\", \"#6A0572\"],\r\n                borderColor: [\"#FF3B3B\", \"#4AACC4\", \"#FFAA33\", \"#1871C9\", \"#690D62\"],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className=\"log-food-page\">\r\n            <h1>Search for a Food Product</h1>\r\n            <p>Total Calories: {totalCalories}</p>\r\n\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={foodInput}\r\n                    onChange={handleSearchChange}\r\n                    placeholder=\"Enter food name\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={quantity}\r\n                    onChange={(e) => setQuantity(Number(e.target.value))}\r\n                    placeholder=\"100\"\r\n                />\r\n                <select onChange={(e) => setUnit(Number(e.target.value))} value={unit}>\r\n                    <option value={1}>gm</option>\r\n                    <option value={0.001}>mg</option>\r\n                    <option value={1000}>kg</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div id=\"suggestions\" className=\"suggestions\">\r\n                {suggestions.length > 0 ? (\r\n                    suggestions.map((product) => (\r\n                        <div key={product.code} onClick={() => getProduct(product.code)}>\r\n                            <strong>{product.name}</strong>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No suggestions available</p>\r\n                )}\r\n            </div>\r\n\r\n            {/* Total Calorie Intake Box */}\r\n            <div className=\"box total-calorie-intake\">\r\n                <h2>Total Calorie Intake </h2>\r\n                <div className=\"circle-progress\">\r\n                    <div className=\"circle\" style={{\r\n                        width: `${(totalCalories / recommendedCalories) * 100}%`,\r\n                        height: `${(totalCalories / recommendedCalories) * 100}%`\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"logged-text\">Logged: {totalCalories} / {recommendedCalories} kcal</div>\r\n                <div className=\"macro-nutrients-pie-chart\">\r\n                    <Pie data={calorieData} />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Breakfast Nutrition Section */}\r\n            <div className=\"box breakfast-nutrition\">\r\n                <h2>Breakfast Nutrition for {selectedDate}</h2>\r\n                <div className=\"circle-progress\">\r\n                    <div className=\"circle\" style={{\r\n                        width: `${(loggedCalories / recommendedCalories) * 100}%`,\r\n                        height: `${(loggedCalories / recommendedCalories) * 100}%`\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"logged-text\">Logged: {loggedCalories} / {recommendedCalories} kcal</div>\r\n                <div className=\"macro-nutrients-pie-chart\">\r\n                    <Pie data={calorieData} />\r\n                </div>\r\n            </div>\r\n\r\n            {popupVisible && (\r\n                <div className=\"popup\">\r\n                    <div id=\"popupContent\">\r\n                        <h2>{foodData.name} ({quantity}g)</h2>\r\n                        <p><strong>Calories:</strong> {foodData.calories.toFixed(2)} kcal</p>\r\n                        <p><strong>Carbohydrates:</strong> {foodData.carbs.toFixed(2)} g</p>\r\n                        <p><strong>Proteins:</strong> {foodData.proteins.toFixed(2)} g</p>\r\n                        <p><strong>Fats:</strong> {foodData.fats.toFixed(2)} g</p>\r\n                    </div>\r\n                    <button onClick={saveData}>Save</button>\r\n                    <button onClick={closePopup}>Close</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogFoodPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}