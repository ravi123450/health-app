{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\image capture\\\\capture image.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport './Ashu.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ashu = () => {\n  _s();\n  const [image, setImage] = useState(null); // Store the captured image\n  const [ingredients, setIngredients] = useState([]);\n  const [probabilities, setProbabilities] = useState([]);\n  const [mass, setMass] = useState(100); // Default mass value\n  const [nutritionInfo, setNutritionInfo] = useState(null);\n  const [mealType, setMealType] = useState('breakfast'); // Default meal type is 'breakfast'\n  const [capturing, setCapturing] = useState(false);\n  const [isCaptured, setIsCaptured] = useState(false); // Flag to manage button visibility\n  const [totalCalories, setTotalCalories] = useState(0);\n  const webcamRef = React.useRef(null);\n\n  // Capture image from the webcam\n  const captureImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot(); // Get base64 image string\n    setImage(imageSrc); // Store the captured image in the state\n    setCapturing(true); // Set capturing state to true\n    setIsCaptured(true); // Set the flag to true after capturing image\n  };\n  const handleMassChange = e => {\n    setMass(e.target.value); // Update the mass value when the user changes it\n  };\n  const handleMealTypeChange = e => {\n    setMealType(e.target.value); // Update the meal type value when the user changes it\n  };\n\n  // Handle base64 image to send to backend for prediction\n  const predict = async () => {\n    if (!image) {\n      console.error(\"No image captured.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5001/predict', {\n        image: image,\n        // Send the base64 image to the backend\n        mass: mass,\n        // Send the mass value along with the image\n        meal_type: mealType // Send the meal type value\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}` // Add token in the Authorization header\n        }\n      });\n      setIngredients(response.data.ingredients);\n      setProbabilities(response.data.probabilities);\n      setNutritionInfo(response.data.nutrition);\n      fetchTotalCalories();\n    } catch (error) {\n      console.error(\"Error in prediction:\", error);\n    }\n  };\n\n  // Update user's total calories after saving data\n  // Fetch total calories for the user after saving data\n  const fetchTotalCalories = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:5001/user-calories', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setTotalCalories(response.data.totalCalories);\n    } catch (error) {\n      console.error(\"Error fetching total calories:\", error);\n    }\n  };\n\n  // Reset the state to capture a new image\n  const captureNewImage = () => {\n    setImage(null);\n    setIngredients([]);\n    setProbabilities([]);\n    setNutritionInfo(null);\n    setCapturing(false);\n    setIsCaptured(false); // Reset the flag to show the \"Capture Image\" button again\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Food Nutrient Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), capturing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Captured\",\n          className: \"captured-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mass (grams):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: mass,\n          onChange: handleMassChange // Handle mass change\n          ,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meal Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mealType,\n          onChange: handleMealTypeChange,\n          className: \"meal-type-dropdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"breakfast\",\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"lunch\",\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dinner\",\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: predict,\n          children: \"Predict Nutrition & Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nutrition-info\",\n        children: nutritionInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nutrition Info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Protein:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.protein]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fat:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.fat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Carbs:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.carbs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Calories:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.calories]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webcam-container\",\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: \"100%\",\n        videoConstraints: {\n          facingMode: \"environment\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), !isCaptured ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button capture-btn\",\n      onClick: captureImage,\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button capture-btn\",\n      onClick: captureNewImage,\n      children: \"Capture New Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients-container\",\n      children: ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ingredients-list\",\n        children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ingredient-item\",\n          children: [ingredient, \": \", probabilities[index].toFixed(2), \"% \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ingredients predicted yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total-calories\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Total Calories: \", totalCalories]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(Ashu, \"3ZxWpiBWmrcdMAtXMiJtn40OHmA=\");\n_c = Ashu;\nexport default Ashu;\nvar _c;\n$RefreshReg$(_c, \"Ashu\");","map":{"version":3,"names":["React","useState","Webcam","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Ashu","_s","image","setImage","ingredients","setIngredients","probabilities","setProbabilities","mass","setMass","nutritionInfo","setNutritionInfo","mealType","setMealType","capturing","setCapturing","isCaptured","setIsCaptured","totalCalories","setTotalCalories","webcamRef","useRef","captureImage","imageSrc","current","getScreenshot","handleMassChange","e","target","value","handleMealTypeChange","predict","console","error","token","localStorage","getItem","response","post","meal_type","headers","data","nutrition","fetchTotalCalories","get","captureNewImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onChange","onClick","protein","fat","carbs","calories","audio","ref","screenshotFormat","width","videoConstraints","facingMode","length","map","ingredient","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/image capture/capture image.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport axios from 'axios';\r\nimport './Ashu.css';\r\n\r\nconst Ashu = () => {\r\n  const [image, setImage] = useState(null);  // Store the captured image\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [probabilities, setProbabilities] = useState([]);\r\n  const [mass, setMass] = useState(100);  // Default mass value\r\n  const [nutritionInfo, setNutritionInfo] = useState(null);\r\n  const [mealType, setMealType] = useState('breakfast');  // Default meal type is 'breakfast'\r\n  const [capturing, setCapturing] = useState(false);\r\n  const [isCaptured, setIsCaptured] = useState(false);  // Flag to manage button visibility\r\n  const [totalCalories, setTotalCalories] = useState(0);\r\n\r\n  const webcamRef = React.useRef(null);\r\n\r\n  // Capture image from the webcam\r\n  const captureImage = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();  // Get base64 image string\r\n    setImage(imageSrc);  // Store the captured image in the state\r\n    setCapturing(true);  // Set capturing state to true\r\n    setIsCaptured(true); // Set the flag to true after capturing image\r\n  };\r\n\r\n  const handleMassChange = (e) => {\r\n    setMass(e.target.value);  // Update the mass value when the user changes it\r\n  };\r\n\r\n  const handleMealTypeChange = (e) => {\r\n    setMealType(e.target.value);  // Update the meal type value when the user changes it\r\n  };\r\n\r\n  // Handle base64 image to send to backend for prediction\r\n  const predict = async () => {\r\n    if (!image) {\r\n      console.error(\"No image captured.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://localhost:5001/predict', {\r\n        image: image,  // Send the base64 image to the backend\r\n        mass: mass,    // Send the mass value along with the image\r\n        meal_type: mealType, // Send the meal type value\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,  // Add token in the Authorization header\r\n        },\r\n      });\r\n\r\n      setIngredients(response.data.ingredients);\r\n      setProbabilities(response.data.probabilities);\r\n      setNutritionInfo(response.data.nutrition);\r\n      fetchTotalCalories()\r\n    } catch (error) {\r\n      console.error(\"Error in prediction:\", error);\r\n    }\r\n  };\r\n\r\n  // Update user's total calories after saving data\r\n  // Fetch total calories for the user after saving data\r\n  const fetchTotalCalories = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('http://localhost:5001/user-calories', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      });\r\n      setTotalCalories(response.data.totalCalories);\r\n    } catch (error) {\r\n      console.error(\"Error fetching total calories:\", error);\r\n    }\r\n  };\r\n\r\n  // Reset the state to capture a new image\r\n  const captureNewImage = () => {\r\n    setImage(null);\r\n    setIngredients([]);\r\n    setProbabilities([]);\r\n    setNutritionInfo(null);\r\n    setCapturing(false);\r\n    setIsCaptured(false); // Reset the flag to show the \"Capture Image\" button again\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"header\">Food Nutrient Prediction</h1>\r\n\r\n      {/* Display webcam or captured image */}\r\n      {capturing ? (\r\n        <>\r\n          <div className=\"image-container\">\r\n            <img src={image} alt=\"Captured\" className=\"captured-image\" />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label>Mass (grams):</label>\r\n            <input\r\n              type=\"number\"\r\n              value={mass}\r\n              onChange={handleMassChange}  // Handle mass change\r\n              className=\"input-field\"\r\n            />\r\n            <label>Meal Type:</label>\r\n            <select\r\n              value={mealType}\r\n              onChange={handleMealTypeChange}\r\n              className=\"meal-type-dropdown\"\r\n            >\r\n              <option value=\"breakfast\">Breakfast</option>\r\n              <option value=\"lunch\">Lunch</option>\r\n              <option value=\"dinner\">Dinner</option>\r\n            </select>\r\n            <button className=\"button\" onClick={predict}>Predict Nutrition & Ingredients</button>\r\n          </div>\r\n          <div className=\"nutrition-info\">\r\n            {nutritionInfo && (\r\n              <div>\r\n                <h3>Nutrition Info:</h3>\r\n                <p><strong>Protein:</strong> {nutritionInfo.protein}</p>\r\n                <p><strong>Fat:</strong> {nutritionInfo.fat}</p>\r\n                <p><strong>Carbs:</strong> {nutritionInfo.carbs}</p>\r\n                <p><strong>Calories:</strong> {nutritionInfo.calories}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"webcam-container\">\r\n          <Webcam\r\n            audio={false}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            width=\"100%\"\r\n            videoConstraints={{\r\n              facingMode: \"environment\"\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Buttons to capture image and predict */}\r\n      {!isCaptured ? (\r\n        <button className=\"button capture-btn\" onClick={captureImage}>Capture Image</button>\r\n      ) : (\r\n        <button className=\"button capture-btn\" onClick={captureNewImage}>Capture New Image</button>\r\n      )}\r\n\r\n      {/* Display predicted ingredients */}\r\n      <div className=\"ingredients-container\">\r\n        {ingredients.length > 0 ? (\r\n          <ul className=\"ingredients-list\">\r\n            {ingredients.map((ingredient, index) => (\r\n              <li key={index} className=\"ingredient-item\">\r\n                {ingredient}: {probabilities[index].toFixed(2)}% {/* Display probability as percentage */}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No ingredients predicted yet.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Display user's total calories */}\r\n      <div className=\"total-calories\">\r\n        <h3>Total Calories: {totalCalories}</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ashu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}