{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\log break fast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./log.css\"; // Your custom CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogFoodPage = () => {\n  _s();\n  const [foodData, setFoodData] = useState({});\n  const [suggestions, setSuggestions] = useState([]);\n  const [foodInput, setFoodInput] = useState('');\n  const [quantity, setQuantity] = useState(100);\n  const [unit, setUnit] = useState(1);\n  const [totalCalories, setTotalCalories] = useState(0); // Total calories tracker\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [recentlyAddedFood, setRecentlyAddedFood] = useState([]);\n  useEffect(() => {\n    // Fetch the user's total calorie intake when the page loads\n    fetch('/user-calories').then(response => response.json()).then(data => setTotalCalories(data.totalCalories));\n  }, []);\n  const handleSearchChange = async e => {\n    const query = e.target.value;\n    setFoodInput(query);\n    if (!query) {\n      setSuggestions([]);\n      return;\n    }\n    const response = await fetch(`/search?query=${query}`);\n    const data = await response.json();\n    setSuggestions(data);\n  };\n  const getProduct = async code => {\n    const response = await fetch(`/product/${code}`);\n    const data = await response.json();\n    setFoodData(data);\n    setPopupVisible(true);\n  };\n  const saveFood = async () => {\n    const response = await fetch('/save', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: foodData.name,\n        calories: foodData.calories * (quantity / 100),\n        carbs: foodData.carbs * (quantity / 100),\n        proteins: foodData.proteins * (quantity / 100),\n        fats: foodData.fats * (quantity / 100)\n      })\n    });\n    if (response.ok) {\n      alert('Food saved successfully');\n      // Fetch the updated total calories\n      fetch('/user-calories').then(response => response.json()).then(data => setTotalCalories(data.totalCalories));\n      setPopupVisible(false);\n      updateRecentlyAddedFood(foodData.name);\n    }\n  };\n  const updateRecentlyAddedFood = foodName => {\n    setRecentlyAddedFood(prevFoods => [foodName, ...prevFoods].slice(0, 3)); // Show the 3 most recent foods\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-food-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log Your Food\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calories-tracker\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Total Calorie Intake: \", totalCalories, \" / 2415 cal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: foodInput,\n        onChange: handleSearchChange,\n        placeholder: \"Search food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantity,\n        onChange: e => setQuantity(e.target.value),\n        placeholder: \"Quantity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setUnit(e.target.value),\n        value: unit,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"gm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0.001,\n          children: \"mg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1000,\n          children: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Scan Barcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Scan Food Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"suggestions\",\n      children: suggestions.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => getProduct(product.code),\n        children: product.name\n      }, product.code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), popupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: foodData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Calories: \", foodData.calories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Carbs: \", foodData.carbs]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Proteins: \", foodData.proteins]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Fats: \", foodData.fats]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveFood,\n        children: \"Save Food\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPopupVisible(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recently-added\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recently Added Foods:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recentlyAddedFood.map((food, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: food\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(LogFoodPage, \"tn7FGnmEFq9a03nvGRNvGMbKuys=\");\n_c = LogFoodPage;\nexport default LogFoodPage;\nvar _c;\n$RefreshReg$(_c, \"LogFoodPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LogFoodPage","_s","foodData","setFoodData","suggestions","setSuggestions","foodInput","setFoodInput","quantity","setQuantity","unit","setUnit","totalCalories","setTotalCalories","popupVisible","setPopupVisible","recentlyAddedFood","setRecentlyAddedFood","fetch","then","response","json","data","handleSearchChange","e","query","target","value","getProduct","code","saveFood","method","headers","body","JSON","stringify","name","calories","carbs","proteins","fats","ok","alert","updateRecentlyAddedFood","foodName","prevFoods","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","id","map","product","onClick","food","index","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/log break fast.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport \"./log.css\"; // Your custom CSS for styling\r\n\r\nconst LogFoodPage = () => {\r\n    const [foodData, setFoodData] = useState({});\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [foodInput, setFoodInput] = useState('');\r\n    const [quantity, setQuantity] = useState(100);\r\n    const [unit, setUnit] = useState(1);\r\n    const [totalCalories, setTotalCalories] = useState(0); // Total calories tracker\r\n    const [popupVisible, setPopupVisible] = useState(false);\r\n    const [recentlyAddedFood, setRecentlyAddedFood] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Fetch the user's total calorie intake when the page loads\r\n        fetch('/user-calories')\r\n            .then(response => response.json())\r\n            .then(data => setTotalCalories(data.totalCalories));\r\n    }, []);\r\n\r\n    const handleSearchChange = async (e) => {\r\n        const query = e.target.value;\r\n        setFoodInput(query);\r\n\r\n        if (!query) {\r\n            setSuggestions([]);\r\n            return;\r\n        }\r\n\r\n        const response = await fetch(`/search?query=${query}`);\r\n        const data = await response.json();\r\n        setSuggestions(data);\r\n    };\r\n\r\n    const getProduct = async (code) => {\r\n        const response = await fetch(`/product/${code}`);\r\n        const data = await response.json();\r\n        setFoodData(data);\r\n        setPopupVisible(true);\r\n    };\r\n\r\n    const saveFood = async () => {\r\n        const response = await fetch('/save', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                name: foodData.name,\r\n                calories: foodData.calories * (quantity / 100),\r\n                carbs: foodData.carbs * (quantity / 100),\r\n                proteins: foodData.proteins * (quantity / 100),\r\n                fats: foodData.fats * (quantity / 100),\r\n            }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            alert('Food saved successfully');\r\n            // Fetch the updated total calories\r\n            fetch('/user-calories')\r\n                .then(response => response.json())\r\n                .then(data => setTotalCalories(data.totalCalories));\r\n\r\n            setPopupVisible(false);\r\n            updateRecentlyAddedFood(foodData.name);\r\n        }\r\n    };\r\n\r\n    const updateRecentlyAddedFood = (foodName) => {\r\n        setRecentlyAddedFood(prevFoods => [foodName, ...prevFoods].slice(0, 3)); // Show the 3 most recent foods\r\n    };\r\n\r\n    return (\r\n        <div className=\"log-food-page\">\r\n            <h1>Log Your Food</h1>\r\n\r\n            <div className=\"calories-tracker\">\r\n                <h2>Total Calorie Intake: {totalCalories} / 2415 cal</h2> {/* Assuming 2415 is the suggested daily intake */}\r\n            </div>\r\n\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={foodInput}\r\n                    onChange={handleSearchChange}\r\n                    placeholder=\"Search food\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={quantity}\r\n                    onChange={(e) => setQuantity(e.target.value)}\r\n                    placeholder=\"Quantity\"\r\n                />\r\n                <select onChange={(e) => setUnit(e.target.value)} value={unit}>\r\n                    <option value={1}>gm</option>\r\n                    <option value={0.001}>mg</option>\r\n                    <option value={1000}>kg</option>\r\n                </select>\r\n                <button>Scan Barcode</button>\r\n                <button>Scan Food Image</button>\r\n            </div>\r\n\r\n            <div id=\"suggestions\">\r\n                {suggestions.map((product) => (\r\n                    <div\r\n                        key={product.code}\r\n                        onClick={() => getProduct(product.code)}\r\n                    >\r\n                        {product.name}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {popupVisible && (\r\n                <div className=\"popup\">\r\n                    <div>\r\n                        <h2>{foodData.name}</h2>\r\n                        <p>Calories: {foodData.calories}</p>\r\n                        <p>Carbs: {foodData.carbs}</p>\r\n                        <p>Proteins: {foodData.proteins}</p>\r\n                        <p>Fats: {foodData.fats}</p>\r\n                    </div>\r\n                    <button onClick={saveFood}>Save Food</button>\r\n                    <button onClick={() => setPopupVisible(false)}>Close</button>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"recently-added\">\r\n                <h3>Recently Added Foods:</h3>\r\n                <ul>\r\n                    {recentlyAddedFood.map((food, index) => (\r\n                        <li key={index}>{food}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogFoodPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}