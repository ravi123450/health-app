{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\sleep.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport { Chart as ChartJS, LineElement, CategoryScale, Title, Tooltip, Legend, LinearScale, PointElement } from \"chart.js\";\nimport \"./sleep.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, Title, Tooltip, Legend, LinearScale, PointElement);\nconst SleepTracker = () => {\n  _s();\n  const [sleepHours, setSleepHours] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [graphData, setGraphData] = useState({\n    labels: [],\n    datasets: [{\n      label: \"Hours of Sleep\",\n      data: [],\n      fill: true,\n      backgroundColor: \"rgba(75, 156, 208, 0.2)\",\n      // Gradient fill\n      borderColor: \"#4B9CD3\",\n      tension: 0.4,\n      borderWidth: 3\n    }]\n  });\n  useEffect(() => {\n    // Fetch sleep data for the last 7 days\n    const fetchData = async () => {\n      const token = localStorage.getItem(\"token\"); // Get the token from local storage or cookies\n\n      if (!token) {\n        setError(\"User is not authenticated.\");\n        return;\n      }\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/users/sleep\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          withCredentials: true\n        });\n        const {\n          sleepHours,\n          last7Days\n        } = response.data;\n\n        // Ensure the most recent data replaces the data for today\n        const today = new Date().toLocaleDateString();\n        const updatedSleepHours = sleepHours.map((hours, index) => {\n          if (last7Days[index] === today && sleepHours[index] !== undefined) {\n            return sleepHours[index];\n          }\n          return hours;\n        });\n        setGraphData({\n          labels: last7Days,\n          datasets: [{\n            label: \"Hours of Sleep\",\n            data: updatedSleepHours,\n            fill: true,\n            backgroundColor: \"rgba(75, 156, 208, 0.2)\",\n            // Gradient fill\n            borderColor: \"#4B9CD3\",\n            tension: 0.4,\n            borderWidth: 3\n          }]\n        });\n      } catch (err) {\n        console.error(\"Error fetching sleep data\", err);\n        setError(\"Error fetching sleep data\");\n      }\n    };\n    fetchData();\n  }, []);\n  const handleSleepChange = e => {\n    setSleepHours(e.target.value);\n  };\n  const handleSleepSubmit = async () => {\n    setLoading(true);\n    setError(null);\n    const token = localStorage.getItem(\"token\"); // Get the token from local storage or cookies\n\n    if (!token) {\n      setError(\"User is not authenticated.\");\n      setLoading(false);\n      return;\n    }\n    try {\n      const date = new Date().toLocaleDateString();\n      await axios.post(\"http://localhost:5000/api/users/sleep\", {\n        date,\n        hours: sleepHours\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        withCredentials: true\n      });\n\n      // Update graph with the new sleep data\n      setGraphData(prevData => {\n        const today = new Date().toLocaleDateString();\n        let newLabels = [...prevData.labels];\n        let newData = [...prevData.datasets[0].data];\n\n        // Check if the current date exists, update it or add it if not\n        const todayIndex = newLabels.indexOf(today);\n        if (todayIndex !== -1) {\n          newData[todayIndex] = sleepHours; // Update existing data\n        } else {\n          newLabels.push(today);\n          newData.push(sleepHours); // Add new entry\n        }\n        return {\n          labels: newLabels,\n          datasets: [{\n            ...prevData.datasets[0],\n            data: newData\n          }]\n        };\n      });\n      setLoading(false);\n    } catch (error) {\n      setError(\"Error saving sleep data.\");\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-tracker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Sleep Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: sleepHours || \"\",\n        onChange: handleSleepChange,\n        min: \"0\",\n        max: \"24\",\n        className: \"sleep-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSleepSubmit,\n        disabled: loading,\n        className: \"submit-button\",\n        children: loading ? \"Submitting...\" : \"Add Sleep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: graphData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(SleepTracker, \"mzE/MIJfb4xjffqHpgxVDMY3SUo=\");\n_c = SleepTracker;\nexport default SleepTracker;\nvar _c;\n$RefreshReg$(_c, \"SleepTracker\");","map":{"version":3,"names":["React","useState","useEffect","Line","axios","Chart","ChartJS","LineElement","CategoryScale","Title","Tooltip","Legend","LinearScale","PointElement","jsxDEV","_jsxDEV","register","SleepTracker","_s","sleepHours","setSleepHours","loading","setLoading","error","setError","graphData","setGraphData","labels","datasets","label","data","fill","backgroundColor","borderColor","tension","borderWidth","fetchData","token","localStorage","getItem","response","get","headers","Authorization","withCredentials","last7Days","today","Date","toLocaleDateString","updatedSleepHours","map","hours","index","undefined","err","console","handleSleepChange","e","target","value","handleSleepSubmit","date","post","prevData","newLabels","newData","todayIndex","indexOf","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","max","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/sleep.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport { Chart as ChartJS, LineElement, CategoryScale, Title, Tooltip, Legend, LinearScale, PointElement } from \"chart.js\";\r\nimport \"./sleep.css\";\r\n\r\nChartJS.register(LineElement, CategoryScale, Title, Tooltip, Legend, LinearScale, PointElement);\r\n\r\nconst SleepTracker = () => {\r\n  const [sleepHours, setSleepHours] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [graphData, setGraphData] = useState({\r\n    labels: [],\r\n    datasets: [\r\n      {\r\n        label: \"Hours of Sleep\",\r\n        data: [],\r\n        fill: true,\r\n        backgroundColor: \"rgba(75, 156, 208, 0.2)\", // Gradient fill\r\n        borderColor: \"#4B9CD3\",\r\n        tension: 0.4,\r\n        borderWidth: 3,\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch sleep data for the last 7 days\r\n    const fetchData = async () => {\r\n      const token = localStorage.getItem(\"token\"); // Get the token from local storage or cookies\r\n\r\n      if (!token) {\r\n        setError(\"User is not authenticated.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/users/sleep\", {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n          withCredentials: true,\r\n        });\r\n\r\n        const { sleepHours, last7Days } = response.data;\r\n\r\n        // Ensure the most recent data replaces the data for today\r\n        const today = new Date().toLocaleDateString();\r\n        const updatedSleepHours = sleepHours.map((hours, index) => {\r\n          if (last7Days[index] === today && sleepHours[index] !== undefined) {\r\n            return sleepHours[index];\r\n          }\r\n          return hours;\r\n        });\r\n\r\n        setGraphData({\r\n          labels: last7Days,\r\n          datasets: [\r\n            {\r\n              label: \"Hours of Sleep\",\r\n              data: updatedSleepHours,\r\n              fill: true,\r\n              backgroundColor: \"rgba(75, 156, 208, 0.2)\", // Gradient fill\r\n              borderColor: \"#4B9CD3\",\r\n              tension: 0.4,\r\n              borderWidth: 3,\r\n            },\r\n          ],\r\n        });\r\n      } catch (err) {\r\n        console.error(\"Error fetching sleep data\", err);\r\n        setError(\"Error fetching sleep data\");\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSleepChange = (e) => {\r\n    setSleepHours(e.target.value);\r\n  };\r\n\r\n  const handleSleepSubmit = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    const token = localStorage.getItem(\"token\"); // Get the token from local storage or cookies\r\n\r\n    if (!token) {\r\n      setError(\"User is not authenticated.\");\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const date = new Date().toLocaleDateString();\r\n      await axios.post(\r\n        \"http://localhost:5000/api/users/sleep\",\r\n        { date, hours: sleepHours },\r\n        { headers: { Authorization: `Bearer ${token}` }, withCredentials: true }\r\n      );\r\n\r\n      // Update graph with the new sleep data\r\n      setGraphData((prevData) => {\r\n        const today = new Date().toLocaleDateString();\r\n        let newLabels = [...prevData.labels];\r\n        let newData = [...prevData.datasets[0].data];\r\n\r\n        // Check if the current date exists, update it or add it if not\r\n        const todayIndex = newLabels.indexOf(today);\r\n        if (todayIndex !== -1) {\r\n          newData[todayIndex] = sleepHours; // Update existing data\r\n        } else {\r\n          newLabels.push(today);\r\n          newData.push(sleepHours); // Add new entry\r\n        }\r\n\r\n        return {\r\n          labels: newLabels,\r\n          datasets: [\r\n            {\r\n              ...prevData.datasets[0],\r\n              data: newData,\r\n            },\r\n          ],\r\n        };\r\n      });\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      setError(\"Error saving sleep data.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"sleep-tracker-container\">\r\n      <h2 className=\"title\">Sleep Tracker</h2>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"number\"\r\n          value={sleepHours || \"\"}\r\n          onChange={handleSleepChange}\r\n          min=\"0\"\r\n          max=\"24\"\r\n          className=\"sleep-input\"\r\n        />\r\n        <button onClick={handleSleepSubmit} disabled={loading} className=\"submit-button\">\r\n          {loading ? \"Submitting...\" : \"Add Sleep\"}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"chart-container\">\r\n        <Line data={graphData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SleepTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}