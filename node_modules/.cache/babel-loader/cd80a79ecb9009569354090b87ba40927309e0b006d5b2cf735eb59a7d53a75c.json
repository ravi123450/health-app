{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\cal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cali = () => {\n  _s();\n  const [caloriesBurned, setCaloriesBurned] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchCalories = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5000/get-calories-burned', {\n        method: 'GET',\n        credentials: 'include' // Include cookies for authentication\n      });\n      const data = await response.json();\n      setCaloriesBurned(data.caloriesBurned);\n    } catch (error) {\n      console.error('Error fetching calories:', error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Fit Calories Burned\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: response => console.log('Login successful', response),\n      onError: () => console.log('Login failed')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCalories,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Fetch Calories Burned'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), caloriesBurned !== null && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Calories Burned (last 24 hours): \", caloriesBurned, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Cali, \"Qq5U/XKh5uDOzPcpyRhLQBpPxEg=\");\n_c = Cali;\nexport default Cali;\nvar _c;\n$RefreshReg$(_c, \"Cali\");","map":{"version":3,"names":["React","useState","GoogleLogin","jsxDEV","_jsxDEV","Cali","_s","caloriesBurned","setCaloriesBurned","loading","setLoading","fetchCalories","response","fetch","method","credentials","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","log","onError","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/cal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nconst Cali = () => {\r\n  const [caloriesBurned, setCaloriesBurned] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchCalories = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('http://localhost:5000/get-calories-burned', {\r\n        method: 'GET',\r\n        credentials: 'include', // Include cookies for authentication\r\n      });\r\n      const data = await response.json();\r\n      setCaloriesBurned(data.caloriesBurned);\r\n    } catch (error) {\r\n      console.error('Error fetching calories:', error);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Google Fit Calories Burned</h1>\r\n      <GoogleLogin\r\n        onSuccess={response => console.log('Login successful', response)}\r\n        onError={() => console.log('Login failed')}\r\n      />\r\n      <button onClick={fetchCalories} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Fetch Calories Burned'}\r\n      </button>\r\n      {caloriesBurned !== null && !loading && (\r\n        <div>\r\n          <h3>Calories Burned (last 24 hours): {caloriesBurned} kcal</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cali;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,KAAK;QACbC,WAAW,EAAE,SAAS,CAAE;MAC1B,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,iBAAiB,CAACQ,IAAI,CAACT,cAAc,CAAC;IACxC,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;IACAR,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjB,OAAA;MAAAiB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrB,OAAA,CAACF,WAAW;MACVwB,SAAS,EAAEd,QAAQ,IAAIO,OAAO,CAACQ,GAAG,CAAC,kBAAkB,EAAEf,QAAQ,CAAE;MACjEgB,OAAO,EAAEA,CAAA,KAAMT,OAAO,CAACQ,GAAG,CAAC,cAAc;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFrB,OAAA;MAAQyB,OAAO,EAAElB,aAAc;MAACmB,QAAQ,EAAErB,OAAQ;MAAAY,QAAA,EAC/CZ,OAAO,GAAG,YAAY,GAAG;IAAuB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACRlB,cAAc,KAAK,IAAI,IAAI,CAACE,OAAO,iBAClCL,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAAiB,QAAA,GAAI,mCAAiC,EAACd,cAAc,EAAC,OAAK;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CApCID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}