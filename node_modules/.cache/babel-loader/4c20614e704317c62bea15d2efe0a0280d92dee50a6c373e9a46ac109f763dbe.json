{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\logfood\\\\log-food-page.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './log.css'; // Ensure your CSS is in the log.css file\nimport { Pie } from 'react-chartjs-2'; // Importing Pie chart from react-chartjs-2\nimport { Bar } from 'react-chartjs-2'; // Importing Bar chart from react-chartjs-2\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from 'chart.js'; // Chart.js setup\n\n// Registering the chart components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\nconst LogFoodPage = () => {\n  _s();\n  const [foodInput, setFoodInput] = useState('');\n  const [quantity, setQuantity] = useState(100);\n  const [unit, setUnit] = useState(1);\n  const [mealType, setMealType] = useState('breakfast'); // Meal type is always breakfast\n  const [suggestions, setSuggestions] = useState([]);\n  const [foodData, setFoodData] = useState({});\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [recommendedCalories, setRecommendedCalories] = useState(360); // Recommended calories for breakfast (fixed)\n  const [loggedCalories, setLoggedCalories] = useState(0); // Logged calories for breakfast on selected date\n  const [macroNutrients, setMacroNutrients] = useState({\n    carbs: 0,\n    proteins: 0,\n    fats: 0,\n    magnesium: 0,\n    sodium: 0\n  });\n  const [breakfastmacroNutrients, setBreakfastmacroNutrients] = useState({\n    carbs: 0,\n    proteins: 0,\n    fats: 0\n  });\n  const [selectedDate, setSelectedDate] = useState(''); // Store selected date\n  const [recommendedtotalCalories, setRecommendedtotalCalories] = useState(0);\n\n  // Fetch total calorie intake and user profile data on page load\n  useEffect(() => {\n    fetchTotalCalories();\n    fetchMacroNutrients();\n    fetchRecommendedtotalCalories();\n    fetchbreakfastmacroNutrients(); // Fetch logged breakfast data for the selected date\n  }, [mealType, selectedDate]); // Fetch data whenever the meal type or date changes\n\n  // Fetch total calories for the user\n  const fetchTotalCalories = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5001/user-calories', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setTotalCalories(data.totalCalories);\n    } catch (error) {\n      console.error(\"Error fetching total calories:\", error);\n    }\n  };\n  const fetchRecommendedtotalCalories = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/users/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      const mealRecommendedtotalCalories = data.calorieIntake; // Fetch calorie intake for the selected meal type\n      setRecommendedtotalCalories(mealRecommendedtotalCalories);\n    } catch (error) {\n      console.error(\"Error fetching recommended calories:\", error);\n    }\n  };\n\n  // Fetch macro nutrients from the user profile\n  const fetchMacroNutrients = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await fetch('http://localhost:5000/api/users/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await response.json();\n      setMacroNutrients({\n        carbs: data.macros.carbs || 0,\n        proteins: data.macros.protein || 0,\n        fats: data.macros.fats || 0,\n        magnesium: data.macros.magnesium || 0,\n        sodium: data.macros.sodium || 0\n      });\n    } catch (error) {\n      console.error(\"Error fetching macro nutrients:\", error);\n    }\n  };\n\n  // Fetch logged calories and macro nutrients for breakfast on the selected date\n  const fetchbreakfastmacroNutrients = async () => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      console.error(\"No token found, user is not logged in\");\n      return;\n    }\n    const selectedDate = new Date().toISOString().split('T')[0]; // Automatically detects today's date\n\n    try {\n      const response = await fetch('http://localhost:5001/total-breakfast-calories', {\n        headers: {\n          'Authorization': `Bearer ${token}` // Sending token in the Authorization header\n        }\n      });\n      const data = await response.json();\n      if (data && data.totalBreakfastCalories !== undefined) {\n        setLoggedCalories(data.totalBreakfastCalories);\n        setBreakfastmacroNutrients({\n          carbs: data.totalCarbs,\n          proteins: data.totalProteins,\n          fats: data.totalFats\n        });\n      }\n    } catch (error) {\n      console.error(\"Error fetching logged breakfast data:\", error);\n    }\n  };\n\n  // Bar Chart Data for Breakfast Macro Nutrients\n  const breakfastBarChartData = {\n    labels: [\"Carbs\", \"Proteins\", \"Fats\"],\n    datasets: [{\n      label: 'Breakfast Macro Nutrients',\n      data: [breakfastmacroNutrients.carbs, breakfastmacroNutrients.proteins, breakfastmacroNutrients.fats],\n      backgroundColor: [\"#FF6B6B\", \"#4ECDC4\", \"#FFD166\"],\n      borderColor: [\"#FF3B3B\", \"#4AACC4\", \"#FFAA33\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-food-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search for a Food Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Calories: \", totalCalories]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: foodInput,\n        onChange: handleSearchChange,\n        placeholder: \"Enter food name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: quantity,\n        onChange: e => setQuantity(Number(e.target.value)),\n        placeholder: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setUnit(Number(e.target.value)),\n        value: unit,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1,\n          children: \"gm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 0.001,\n          children: \"mg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 1000,\n          children: \"kg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box total-calorie-intake\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Total Calorie Intake \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          style: {\n            width: `${totalCalories / recommendedtotalCalories * 100}%`,\n            height: `${totalCalories / recommendedtotalCalories * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logged-text\",\n        children: [\"Logged: \", totalCalories, \" / \", recommendedtotalCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"macro-nutrients-pie-chart\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: calorieData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box breakfast-nutrition\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Breakfast Nutrition for \", selectedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circle-progress\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle\",\n          style: {\n            width: `${loggedCalories / recommendedCalories * 100}%`,\n            height: `${loggedCalories / recommendedCalories * 100}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logged-text\",\n        children: [\"Logged: \", loggedCalories, \" / \", recommendedCalories, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"macro-nutrients-pie-chart\",\n        children: /*#__PURE__*/_jsxDEV(Pie, {\n          data: BreakfastData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box breakfast-macro-nutrients-bar-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Breakfast Macro Nutrients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: breakfastBarChartData,\n        options: {\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this), popupVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"popupContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [foodData.name, \" (\", quantity, \"g)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Calories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 28\n          }, this), \" \", foodData.calories.toFixed(2), \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Carbohydrates:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 28\n          }, this), \" \", foodData.carbs.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Proteins:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 28\n          }, this), \" \", foodData.proteins.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Fats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 28\n          }, this), \" \", foodData.fats.toFixed(2), \" g\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveData,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closePopup,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_s(LogFoodPage, \"VJhS3PYVKcKNsD9+kBBwZ7k5LO4=\");\n_c = LogFoodPage;\nexport default LogFoodPage;\nvar _c;\n$RefreshReg$(_c, \"LogFoodPage\");","map":{"version":3,"names":["React","useState","useEffect","Pie","Bar","Chart","ChartJS","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","jsxDEV","_jsxDEV","register","LogFoodPage","_s","foodInput","setFoodInput","quantity","setQuantity","unit","setUnit","mealType","setMealType","suggestions","setSuggestions","foodData","setFoodData","popupVisible","setPopupVisible","totalCalories","setTotalCalories","recommendedCalories","setRecommendedCalories","loggedCalories","setLoggedCalories","macroNutrients","setMacroNutrients","carbs","proteins","fats","magnesium","sodium","breakfastmacroNutrients","setBreakfastmacroNutrients","selectedDate","setSelectedDate","recommendedtotalCalories","setRecommendedtotalCalories","fetchTotalCalories","fetchMacroNutrients","fetchRecommendedtotalCalories","fetchbreakfastmacroNutrients","token","localStorage","getItem","response","fetch","headers","data","json","error","console","mealRecommendedtotalCalories","calorieIntake","macros","protein","Date","toISOString","split","totalBreakfastCalories","undefined","totalCarbs","totalProteins","totalFats","breakfastBarChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","handleSearchChange","placeholder","e","Number","target","style","width","height","calorieData","BreakfastData","options","responsive","id","name","calories","toFixed","onClick","saveData","closePopup","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/logfood/log-food-page.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './log.css'; // Ensure your CSS is in the log.css file\r\nimport { Pie } from 'react-chartjs-2';  // Importing Pie chart from react-chartjs-2\r\nimport { Bar } from 'react-chartjs-2';  // Importing Bar chart from react-chartjs-2\r\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from 'chart.js';  // Chart.js setup\r\n\r\n// Registering the chart components\r\nChartJS.register(ArcElement, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\r\n\r\nconst LogFoodPage = () => {\r\n    const [foodInput, setFoodInput] = useState('');\r\n    const [quantity, setQuantity] = useState(100);\r\n    const [unit, setUnit] = useState(1);\r\n    const [mealType, setMealType] = useState('breakfast'); // Meal type is always breakfast\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [foodData, setFoodData] = useState({});\r\n    const [popupVisible, setPopupVisible] = useState(false);\r\n    const [totalCalories, setTotalCalories] = useState(0);\r\n    const [recommendedCalories, setRecommendedCalories] = useState(360); // Recommended calories for breakfast (fixed)\r\n    const [loggedCalories, setLoggedCalories] = useState(0); // Logged calories for breakfast on selected date\r\n    const [macroNutrients, setMacroNutrients] = useState({ carbs: 0, proteins: 0, fats: 0, magnesium: 0, sodium: 0 });\r\n    const [breakfastmacroNutrients, setBreakfastmacroNutrients] = useState({ carbs: 0, proteins: 0, fats: 0 });\r\n    const [selectedDate, setSelectedDate] = useState(''); // Store selected date\r\n    const [recommendedtotalCalories, setRecommendedtotalCalories] = useState(0);\r\n\r\n    // Fetch total calorie intake and user profile data on page load\r\n    useEffect(() => {\r\n        fetchTotalCalories();\r\n        fetchMacroNutrients();\r\n        fetchRecommendedtotalCalories();\r\n        fetchbreakfastmacroNutrients(); // Fetch logged breakfast data for the selected date\r\n    }, [mealType, selectedDate]); // Fetch data whenever the meal type or date changes\r\n\r\n    // Fetch total calories for the user\r\n    const fetchTotalCalories = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch('http://localhost:5001/user-calories', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            setTotalCalories(data.totalCalories);\r\n        } catch (error) {\r\n            console.error(\"Error fetching total calories:\", error);\r\n        }\r\n    };\r\n\r\n    const fetchRecommendedtotalCalories = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch('http://localhost:5000/api/users/profile', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            const mealRecommendedtotalCalories = data.calorieIntake; // Fetch calorie intake for the selected meal type\r\n            setRecommendedtotalCalories(mealRecommendedtotalCalories);\r\n        } catch (error) {\r\n            console.error(\"Error fetching recommended calories:\", error);\r\n        }\r\n    };\r\n\r\n    // Fetch macro nutrients from the user profile\r\n    const fetchMacroNutrients = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await fetch('http://localhost:5000/api/users/profile', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`,\r\n                },\r\n            });\r\n            const data = await response.json();\r\n            setMacroNutrients({\r\n                carbs: data.macros.carbs || 0,\r\n                proteins: data.macros.protein || 0,\r\n                fats: data.macros.fats || 0,\r\n                magnesium: data.macros.magnesium || 0,\r\n                sodium: data.macros.sodium || 0,\r\n            });\r\n        } catch (error) {\r\n            console.error(\"Error fetching macro nutrients:\", error);\r\n        }\r\n    };\r\n\r\n    // Fetch logged calories and macro nutrients for breakfast on the selected date\r\n    const fetchbreakfastmacroNutrients = async () => {\r\n        const token = localStorage.getItem('token');\r\n        \r\n        if (!token) {\r\n            console.error(\"No token found, user is not logged in\");\r\n            return;\r\n        }\r\n\r\n        const selectedDate = new Date().toISOString().split('T')[0]; // Automatically detects today's date\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5001/total-breakfast-calories', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${token}`, // Sending token in the Authorization header\r\n                },\r\n            });\r\n\r\n            const data = await response.json();\r\n            \r\n            if (data && data.totalBreakfastCalories !== undefined) {\r\n                setLoggedCalories(data.totalBreakfastCalories);\r\n                setBreakfastmacroNutrients({\r\n                    carbs: data.totalCarbs,\r\n                    proteins: data.totalProteins,\r\n                    fats: data.totalFats,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error fetching logged breakfast data:\", error);\r\n        }\r\n    };\r\n    \r\n    // Bar Chart Data for Breakfast Macro Nutrients\r\n    const breakfastBarChartData = {\r\n        labels: [\"Carbs\", \"Proteins\", \"Fats\"],\r\n        datasets: [\r\n            {\r\n                label: 'Breakfast Macro Nutrients',\r\n                data: [\r\n                    breakfastmacroNutrients.carbs,\r\n                    breakfastmacroNutrients.proteins,\r\n                    breakfastmacroNutrients.fats,\r\n                ],\r\n                backgroundColor: [\"#FF6B6B\", \"#4ECDC4\", \"#FFD166\"],\r\n                borderColor: [\"#FF3B3B\", \"#4AACC4\", \"#FFAA33\"],\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div className=\"log-food-page\">\r\n            <h1>Search for a Food Product</h1>\r\n            <p>Total Calories: {totalCalories}</p>\r\n\r\n            <div className=\"search-container\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={foodInput}\r\n                    onChange={handleSearchChange}\r\n                    placeholder=\"Enter food name\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={quantity}\r\n                    onChange={(e) => setQuantity(Number(e.target.value))}\r\n                    placeholder=\"100\"\r\n                />\r\n                <select onChange={(e) => setUnit(Number(e.target.value))} value={unit}>\r\n                    <option value={1}>gm</option>\r\n                    <option value={0.001}>mg</option>\r\n                    <option value={1000}>kg</option>\r\n                </select>\r\n            </div>\r\n\r\n            {/* Total Calorie Intake Box */}\r\n            <div className=\"box total-calorie-intake\">\r\n                <h2>Total Calorie Intake </h2>\r\n                <div className=\"circle-progress\">\r\n                    <div className=\"circle\" style={{\r\n                        width: `${(totalCalories / recommendedtotalCalories) * 100}%`,\r\n                        height: `${(totalCalories / recommendedtotalCalories) * 100}%`\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"logged-text\">Logged: {totalCalories} / {recommendedtotalCalories} kcal</div>\r\n                <div className=\"macro-nutrients-pie-chart\">\r\n                    <Pie data={calorieData} />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Breakfast Nutrition Section */}\r\n            <div className=\"box breakfast-nutrition\">\r\n                <h2>Breakfast Nutrition for {selectedDate}</h2>\r\n                <div className=\"circle-progress\">\r\n                    <div className=\"circle\" style={{\r\n                        width: `${(loggedCalories / recommendedCalories) * 100}%`,\r\n                        height: `${(loggedCalories / recommendedCalories) * 100}%`\r\n                    }}></div>\r\n                </div>\r\n                <div className=\"logged-text\">Logged: {loggedCalories} / {recommendedCalories} kcal</div>\r\n                <div className=\"macro-nutrients-pie-chart\">\r\n                    <Pie data={BreakfastData} />\r\n                </div>\r\n            </div>\r\n\r\n            {/* New Section for Bar Chart displaying Macro Nutrients */}\r\n            <div className=\"box breakfast-macro-nutrients-bar-chart\">\r\n                <h2>Breakfast Macro Nutrients</h2>\r\n                <Bar data={breakfastBarChartData} options={{ responsive: true }} />\r\n            </div>\r\n\r\n            {popupVisible && (\r\n                <div className=\"popup\">\r\n                    <div id=\"popupContent\">\r\n                        <h2>{foodData.name} ({quantity}g)</h2>\r\n                        <p><strong>Calories:</strong> {foodData.calories.toFixed(2)} kcal</p>\r\n                        <p><strong>Carbohydrates:</strong> {foodData.carbs.toFixed(2)} g</p>\r\n                        <p><strong>Proteins:</strong> {foodData.proteins.toFixed(2)} g</p>\r\n                        <p><strong>Fats:</strong> {foodData.fats.toFixed(2)} g</p>\r\n                    </div>\r\n                    <button onClick={saveData}>Save</button>\r\n                    <button onClick={closePopup}>Close</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LogFoodPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}