{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\image capture\\\\capture image.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ashu = () => {\n  _s();\n  const [image, setImage] = useState(null); // Store the captured image\n  const [ingredients, setIngredients] = useState([]);\n  const [probabilities, setProbabilities] = useState([]);\n  const [mass, setMass] = useState(100); // Default mass value\n  const [nutritionInfo, setNutritionInfo] = useState(null);\n  const [capturing, setCapturing] = useState(false);\n  const [isCaptured, setIsCaptured] = useState(false); // Flag to manage button visibility\n\n  const webcamRef = React.useRef(null);\n\n  // Capture image from the webcam\n  const captureImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot(); // Get base64 image string\n    setImage(imageSrc); // Store the captured image in the state\n    setCapturing(true); // Set capturing state to true\n    setIsCaptured(true); // Set the flag to true after capturing image\n  };\n  const handleMassChange = e => {\n    setMass(e.target.value); // Update the mass value when the user changes it\n  };\n\n  // Handle base64 image to send to backend for prediction\n  const predict = async () => {\n    if (!image) {\n      console.error(\"No image captured.\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5001/predict', {\n        image: image,\n        // Send the base64 image to the backend\n        mass: mass // Send the mass value along with the image\n      });\n      setIngredients(response.data.ingredients);\n      setProbabilities(response.data.probabilities);\n      setNutritionInfo(response.data.nutrition);\n    } catch (error) {\n      console.error(\"Error in prediction:\", error);\n    }\n  };\n\n  // Reset the state to capture a new image\n  const captureNewImage = () => {\n    setImage(null);\n    setIngredients([]);\n    setProbabilities([]);\n    setNutritionInfo(null);\n    setCapturing(false);\n    setIsCaptured(false); // Reset the flag to show the \"Capture Image\" button again\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Food Nutrient Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), capturing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Captured\",\n          className: \"captured-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mass (grams):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: mass,\n          onChange: handleMassChange // Handle mass change\n          ,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: predict,\n          children: \"Predict Nutrition & Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nutrition-info\",\n        children: nutritionInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nutrition Info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Protein:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.protein]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Fat:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.fat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Carbs:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.carbs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Calories:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 20\n            }, this), \" \", nutritionInfo.calories]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webcam-container\",\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: \"100%\",\n        videoConstraints: {\n          facingMode: \"environment\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), !isCaptured ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button capture-btn\",\n      onClick: captureImage,\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button capture-btn\",\n      onClick: captureNewImage,\n      children: \"Capture New Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients-container\",\n      children: ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ingredients-list\",\n        children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ingredient-item\",\n          children: [ingredient, \": \", probabilities[index].toFixed(2), \"% \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ingredients predicted yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Ashu, \"7/vocoi2nYwOWTkxmdENsvyEHg8=\");\n_c = Ashu;\nexport default Ashu;\nvar _c;\n$RefreshReg$(_c, \"Ashu\");","map":{"version":3,"names":["React","useState","Webcam","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Ashu","_s","image","setImage","ingredients","setIngredients","probabilities","setProbabilities","mass","setMass","nutritionInfo","setNutritionInfo","capturing","setCapturing","isCaptured","setIsCaptured","webcamRef","useRef","captureImage","imageSrc","current","getScreenshot","handleMassChange","e","target","value","predict","console","error","response","post","data","nutrition","captureNewImage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onChange","onClick","protein","fat","carbs","calories","audio","ref","screenshotFormat","width","videoConstraints","facingMode","length","map","ingredient","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/image capture/capture image.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport axios from 'axios';\r\n\r\nconst Ashu = () => {\r\n  const [image, setImage] = useState(null);  // Store the captured image\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [probabilities, setProbabilities] = useState([]);\r\n  const [mass, setMass] = useState(100);  // Default mass value\r\n  const [nutritionInfo, setNutritionInfo] = useState(null);\r\n  const [capturing, setCapturing] = useState(false);\r\n  const [isCaptured, setIsCaptured] = useState(false);  // Flag to manage button visibility\r\n\r\n  const webcamRef = React.useRef(null);\r\n\r\n  // Capture image from the webcam\r\n  const captureImage = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();  // Get base64 image string\r\n    setImage(imageSrc);  // Store the captured image in the state\r\n    setCapturing(true);  // Set capturing state to true\r\n    setIsCaptured(true); // Set the flag to true after capturing image\r\n  };\r\n\r\n  const handleMassChange = (e) => {\r\n    setMass(e.target.value);  // Update the mass value when the user changes it\r\n  };\r\n\r\n  // Handle base64 image to send to backend for prediction\r\n  const predict = async () => {\r\n    if (!image) {\r\n      console.error(\"No image captured.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/predict', {\r\n        image: image,  // Send the base64 image to the backend\r\n        mass: mass     // Send the mass value along with the image\r\n      });\r\n\r\n      setIngredients(response.data.ingredients);\r\n      setProbabilities(response.data.probabilities);\r\n      setNutritionInfo(response.data.nutrition);\r\n    } catch (error) {\r\n      console.error(\"Error in prediction:\", error);\r\n    }\r\n  };\r\n\r\n  // Reset the state to capture a new image\r\n  const captureNewImage = () => {\r\n    setImage(null);\r\n    setIngredients([]);\r\n    setProbabilities([]);\r\n    setNutritionInfo(null);\r\n    setCapturing(false);\r\n    setIsCaptured(false); // Reset the flag to show the \"Capture Image\" button again\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"header\">Food Nutrient Prediction</h1>\r\n\r\n      {/* Display webcam or captured image */}\r\n      {capturing ? (\r\n        <>\r\n          <div className=\"image-container\">\r\n            <img src={image} alt=\"Captured\" className=\"captured-image\" />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label>Mass (grams):</label>\r\n            <input \r\n              type=\"number\" \r\n              value={mass} \r\n              onChange={handleMassChange}  // Handle mass change\r\n              className=\"input-field\"\r\n            />\r\n            <button className=\"button\" onClick={predict}>Predict Nutrition & Ingredients</button>\r\n          </div>\r\n          <div className=\"nutrition-info\">\r\n            {nutritionInfo && (\r\n              <div>\r\n                <h3>Nutrition Info:</h3>\r\n                <p><strong>Protein:</strong> {nutritionInfo.protein}</p>\r\n                <p><strong>Fat:</strong> {nutritionInfo.fat}</p>\r\n                <p><strong>Carbs:</strong> {nutritionInfo.carbs}</p>\r\n                <p><strong>Calories:</strong> {nutritionInfo.calories}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"webcam-container\">\r\n          <Webcam\r\n            audio={false}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            width=\"100%\"\r\n            videoConstraints={{\r\n              facingMode: \"environment\"\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Buttons to capture image and predict */}\r\n      {!isCaptured ? (\r\n        <button className=\"button capture-btn\" onClick={captureImage}>Capture Image</button>\r\n      ) : (\r\n        <button className=\"button capture-btn\" onClick={captureNewImage}>Capture New Image</button>\r\n      )}\r\n\r\n      {/* Display predicted ingredients */}\r\n      <div className=\"ingredients-container\">\r\n        {ingredients.length > 0 ? (\r\n          <ul className=\"ingredients-list\">\r\n            {ingredients.map((ingredient, index) => (\r\n              <li key={index} className=\"ingredient-item\">\r\n                {ingredient}: {probabilities[index].toFixed(2)}% {/* Display probability as percentage */}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No ingredients predicted yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ashu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}