{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\Registration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport \"chart.js/auto\";\nimport \"./Registration.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  id: 1,\n  question: \"Your Name\",\n  field: \"name\",\n  type: \"text\",\n  placeholder: \"Enter your name\"\n}, {\n  id: 2,\n  question: \"Your Gender\",\n  field: \"gender\",\n  type: \"radio\",\n  options: [\"Male\", \"Female\"]\n}, {\n  id: 3,\n  question: \"Your Age\",\n  field: \"age\",\n  type: \"number\",\n  placeholder: \"Enter your age\"\n}, {\n  id: 4,\n  question: \"Activity Level\",\n  field: \"activity\",\n  type: \"radio\",\n  options: [\"Sedentary\", \"Moderate\", \"Active\"]\n}, {\n  id: 5,\n  question: \"Height (cm)\",\n  field: \"height\",\n  type: \"number\",\n  placeholder: \"Enter height in cm\"\n}, {\n  id: 6,\n  question: \"Current Weight (kg)\",\n  field: \"weight\",\n  type: \"number\",\n  placeholder: \"Enter weight in kg\"\n}, {\n  id: 7,\n  question: \"Target Weight (kg)\",\n  field: \"targetWeight\",\n  type: \"number\",\n  placeholder: \"Enter target weight in kg\"\n}, {\n  id: 8,\n  question: \"Medical Conditions\",\n  field: \"medicalCondition\",\n  type: \"checkbox\",\n  options: [\"Diabetes\", \"Obesity\", \"Injury\", \"Other\"]\n}, {\n  id: 9,\n  question: \"Your Nutrition & BMI\",\n  field: \"bmi\",\n  type: \"bmi\"\n}];\nconst Registration = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    gender: \"\",\n    age: \"\",\n    activity: \"\",\n    height: \"\",\n    weight: \"\",\n    targetWeight: \"\",\n    medicalCondition: []\n  });\n  const totalSteps = steps.length;\n  const navigate = useNavigate();\n  const handleNext = () => {\n    if (validateCurrentStep()) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => {\n      var _prev$name;\n      return {\n        ...prev,\n        [name]: type === \"checkbox\" ? checked ? [...(prev[name] || []), value] : (_prev$name = prev[name]) === null || _prev$name === void 0 ? void 0 : _prev$name.filter(item => item !== value) : value\n      };\n    });\n  };\n  const validateCurrentStep = () => {\n    const step = steps[currentStep];\n    if (step.type === \"radio\" || step.type === \"text\" || step.type === \"number\") {\n      return formData[step.field] && formData[step.field] !== \"\";\n    }\n    if (step.type === \"checkbox\") {\n      return formData[step.field] && formData[step.field].length > 0;\n    }\n    return true;\n  };\n  const calculateBMI = () => {\n    const height = parseFloat(formData.height) || 1;\n    const weight = parseFloat(formData.weight) || 1;\n    return (weight / (height / 100) ** 2).toFixed(1);\n  };\n  const calculateCalories = () => {\n    const weight = parseFloat(formData.weight) || 1;\n    const activityMultiplier = formData.activity === \"Sedentary\" ? 24 : formData.activity === \"Moderate\" ? 30 : 35;\n    return (weight * activityMultiplier).toFixed(0);\n  };\n  const calculateMacros = () => {\n    const calories = calculateCalories();\n    return {\n      protein: (calories * 0.3 / 4).toFixed(1),\n      carbs: (calories * 0.4 / 4).toFixed(1),\n      fats: (calories * 0.3 / 9).toFixed(1),\n      magnesium: 400,\n      sodium: 2300\n    };\n  };\n  const calculateTimeToTargetWeight = () => {\n    const currentWeight = parseFloat(formData.weight) || 1;\n    const targetWeight = parseFloat(formData.targetWeight) || 1;\n    const weightToLose = Math.abs(currentWeight - targetWeight);\n    const weeks = (weightToLose / 0.45).toFixed(1);\n    return `${weeks} weeks (~${(weeks / 4).toFixed(1)} months)`;\n  };\n  const handleSignIn = () => {\n    const registrationData = {\n      ...formData,\n      bmi: calculateBMI(),\n      calorieIntake: calculateCalories(),\n      macros: calculateMacros(),\n      estimatedTimeToTargetWeight: calculateTimeToTargetWeight()\n    };\n    console.log(\"üîç Passing Registration Data to SignUp:\", registrationData);\n    navigate(\"/signin\", {\n      state: {\n        formData: registrationData\n      }\n    });\n  };\n  const macros = calculateMacros();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"registration-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: `${(currentStep + 1) / totalSteps * 100}%`\n        },\n        className: \"progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: steps[currentStep].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), steps[currentStep].type === \"bmi\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bmi-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Your BMI: \", calculateBMI()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: calculateBMI() < 18.5 ? \"Underweight\" : calculateBMI() < 25 ? \"Normal\" : \"Overweight\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Daily Caloric Intake: \", calculateCalories(), \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Time to Target Weight: \", calculateTimeToTargetWeight()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"graph-container\",\n          children: [/*#__PURE__*/_jsxDEV(Bar, {\n            data: {\n              labels: [\"Protein (g)\", \"Carbs (g)\", \"Fats (g)\", \"Magnesium (mg)\", \"Sodium (mg)\"],\n              datasets: [{\n                label: \"Daily Intake\",\n                data: [macros.protein, macros.carbs, macros.fats, macros.magnesium, macros.sodium],\n                backgroundColor: [\"#4CAF50\", \"#2196F3\", \"#FFC107\", \"#9C27B0\", \"#FF5722\"]\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n            data: {\n              labels: [\"Weeks to Target\", \"Remaining Weeks\"],\n              datasets: [{\n                data: [parseFloat(calculateTimeToTargetWeight().split(\" \")[0]), 12 - parseFloat(calculateTimeToTargetWeight().split(\" \")[0])],\n                backgroundColor: [\"#FF9800\", \"#E0E0E0\"]\n              }]\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : steps[currentStep].type === \"radio\" ? steps[currentStep].options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: steps[currentStep].field,\n          value: option,\n          checked: formData[steps[currentStep].field] === option,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), option]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this)) : steps[currentStep].type === \"checkbox\" ? steps[currentStep].options.map(option => {\n        var _formData$steps$curre;\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: steps[currentStep].field,\n            value: option,\n            checked: (_formData$steps$curre = formData[steps[currentStep].field]) === null || _formData$steps$curre === void 0 ? void 0 : _formData$steps$curre.includes(option),\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), option]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: steps[currentStep].type,\n        name: steps[currentStep].field,\n        value: formData[steps[currentStep].field] || \"\",\n        onChange: handleChange,\n        placeholder: steps[currentStep].placeholder,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), currentStep < totalSteps - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: !validateCurrentStep(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sign-in-btn\",\n        onClick: handleSignIn,\n        children: \"Sign Up to Save Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"SPNAq8LzZtdVnAG0HyYZzAxG0DQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","useNavigate","Bar","Doughnut","jsxDEV","_jsxDEV","steps","id","question","field","type","placeholder","options","Registration","_s","currentStep","setCurrentStep","formData","setFormData","name","gender","age","activity","height","weight","targetWeight","medicalCondition","totalSteps","length","navigate","handleNext","validateCurrentStep","handleChange","e","value","checked","target","prev","_prev$name","filter","item","step","calculateBMI","parseFloat","toFixed","calculateCalories","activityMultiplier","calculateMacros","calories","protein","carbs","fats","magnesium","sodium","calculateTimeToTargetWeight","currentWeight","weightToLose","Math","abs","weeks","handleSignIn","registrationData","bmi","calorieIntake","macros","estimatedTimeToTargetWeight","console","log","state","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","datasets","label","backgroundColor","split","map","option","onChange","required","_formData$steps$curre","includes","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/Registration.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\";\r\nimport \"./Registration.css\";\r\n\r\nconst steps = [\r\n  { id: 1, question: \"Your Name\", field: \"name\", type: \"text\", placeholder: \"Enter your name\" },\r\n  { id: 2, question: \"Your Gender\", field: \"gender\", type: \"radio\", options: [\"Male\", \"Female\"] },\r\n  { id: 3, question: \"Your Age\", field: \"age\", type: \"number\", placeholder: \"Enter your age\" },\r\n  { id: 4, question: \"Activity Level\", field: \"activity\", type: \"radio\", options: [\"Sedentary\", \"Moderate\", \"Active\"] },\r\n  { id: 5, question: \"Height (cm)\", field: \"height\", type: \"number\", placeholder: \"Enter height in cm\" },\r\n  { id: 6, question: \"Current Weight (kg)\", field: \"weight\", type: \"number\", placeholder: \"Enter weight in kg\" },\r\n  { id: 7, question: \"Target Weight (kg)\", field: \"targetWeight\", type: \"number\", placeholder: \"Enter target weight in kg\" },\r\n  { id: 8, question: \"Medical Conditions\", field: \"medicalCondition\", type: \"checkbox\", options: [\"Diabetes\", \"Obesity\", \"Injury\", \"Other\"] },\r\n  { id: 9, question: \"Your Nutrition & BMI\", field: \"bmi\", type: \"bmi\" }\r\n];\r\n\r\nconst Registration = () => {\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    gender: \"\",\r\n    age: \"\",\r\n    activity: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n    targetWeight: \"\",\r\n    medicalCondition: [],\r\n  });\r\n\r\n  const totalSteps = steps.length;\r\n  const navigate = useNavigate();\r\n\r\n  const handleNext = () => {\r\n    if (validateCurrentStep()) {\r\n      setCurrentStep(currentStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\"\r\n        ? checked\r\n          ? [...(prev[name] || []), value]\r\n          : prev[name]?.filter((item) => item !== value)\r\n        : value\r\n    }));\r\n  };\r\n\r\n  const validateCurrentStep = () => {\r\n    const step = steps[currentStep];\r\n    if (step.type === \"radio\" || step.type === \"text\" || step.type === \"number\") {\r\n      return formData[step.field] && formData[step.field] !== \"\";\r\n    }\r\n    if (step.type === \"checkbox\") {\r\n      return formData[step.field] && formData[step.field].length > 0;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const calculateBMI = () => {\r\n    const height = parseFloat(formData.height) || 1;\r\n    const weight = parseFloat(formData.weight) || 1;\r\n    return (weight / ((height / 100) ** 2)).toFixed(1);\r\n  };\r\n\r\n  const calculateCalories = () => {\r\n    const weight = parseFloat(formData.weight) || 1;\r\n    const activityMultiplier = formData.activity === \"Sedentary\" ? 24 : formData.activity === \"Moderate\" ? 30 : 35;\r\n    return (weight * activityMultiplier).toFixed(0);\r\n  };\r\n\r\n  const calculateMacros = () => {\r\n    const calories = calculateCalories();\r\n    return {\r\n      protein: ((calories * 0.3) / 4).toFixed(1),\r\n      carbs: ((calories * 0.4) / 4).toFixed(1),\r\n      fats: ((calories * 0.3) / 9).toFixed(1),\r\n      magnesium: 400,\r\n      sodium: 2300,\r\n    };\r\n  };\r\n\r\n  const calculateTimeToTargetWeight = () => {\r\n    const currentWeight = parseFloat(formData.weight) || 1;\r\n    const targetWeight = parseFloat(formData.targetWeight) || 1;\r\n    const weightToLose = Math.abs(currentWeight - targetWeight);\r\n    const weeks = (weightToLose / 0.45).toFixed(1);\r\n    return `${weeks} weeks (~${(weeks / 4).toFixed(1)} months)`;\r\n  };\r\n\r\n  const handleSignIn = () => {\r\n    const registrationData = {\r\n      ...formData,\r\n      bmi: calculateBMI(),\r\n      calorieIntake: calculateCalories(),\r\n      macros: calculateMacros(),\r\n      estimatedTimeToTargetWeight: calculateTimeToTargetWeight(),\r\n    };\r\n\r\n    console.log(\"üîç Passing Registration Data to SignUp:\", registrationData);\r\n    navigate(\"/signin\", { state: { formData: registrationData } });\r\n  };\r\n\r\n  const macros = calculateMacros();\r\n\r\n  return (\r\n    <div className=\"registration-container\">\r\n      <div className=\"progress-bar\">\r\n        <div style={{ width: `${((currentStep + 1) / totalSteps) * 100}%` }} className=\"progress\"></div>\r\n      </div>\r\n\r\n      <div className=\"registration-box\">\r\n        <h2>{steps[currentStep].question}</h2>\r\n\r\n        {steps[currentStep].type === \"bmi\" ? (\r\n          <div className=\"bmi-box\">\r\n            <h3>Your BMI: {calculateBMI()}</h3>\r\n            <p>{calculateBMI() < 18.5 ? \"Underweight\" : calculateBMI() < 25 ? \"Normal\" : \"Overweight\"}</p>\r\n            <h4>Daily Caloric Intake: {calculateCalories()} kcal</h4>\r\n            <h4>Time to Target Weight: {calculateTimeToTargetWeight()}</h4>\r\n            <div className=\"graph-container\">\r\n              <Bar\r\n                data={{\r\n                  labels: [\"Protein (g)\", \"Carbs (g)\", \"Fats (g)\", \"Magnesium (mg)\", \"Sodium (mg)\"],\r\n                  datasets: [{ label: \"Daily Intake\", data: [macros.protein, macros.carbs, macros.fats, macros.magnesium, macros.sodium], backgroundColor: [\"#4CAF50\", \"#2196F3\", \"#FFC107\", \"#9C27B0\", \"#FF5722\"] }]\r\n                }}\r\n              />\r\n              <Doughnut\r\n                data={{\r\n                  labels: [\"Weeks to Target\", \"Remaining Weeks\"],\r\n                  datasets: [{ data: [parseFloat(calculateTimeToTargetWeight().split(\" \")[0]), 12 - parseFloat(calculateTimeToTargetWeight().split(\" \")[0])], backgroundColor: [\"#FF9800\", \"#E0E0E0\"] }]\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        ) : steps[currentStep].type === \"radio\" ? (\r\n          steps[currentStep].options.map((option) => (\r\n            <label key={option}>\r\n              <input type=\"radio\" name={steps[currentStep].field} value={option} checked={formData[steps[currentStep].field] === option} onChange={handleChange} required />\r\n              {option}\r\n            </label>\r\n          ))\r\n        ) : steps[currentStep].type === \"checkbox\" ? (\r\n          steps[currentStep].options.map((option) => (\r\n            <label key={option}>\r\n              <input type=\"checkbox\" name={steps[currentStep].field} value={option} checked={formData[steps[currentStep].field]?.includes(option)} onChange={handleChange} required />\r\n              {option}\r\n            </label>\r\n          ))\r\n        ) : (\r\n          <input type={steps[currentStep].type} name={steps[currentStep].field} value={formData[steps[currentStep].field] || \"\"} onChange={handleChange} placeholder={steps[currentStep].placeholder} required />\r\n        )}\r\n\r\n        {currentStep < totalSteps - 1 ? (\r\n          <button onClick={handleNext} disabled={!validateCurrentStep()}>Next</button>\r\n        ) : (\r\n          <button className=\"sign-in-btn\" onClick={handleSignIn}>Sign Up to Save Data</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}