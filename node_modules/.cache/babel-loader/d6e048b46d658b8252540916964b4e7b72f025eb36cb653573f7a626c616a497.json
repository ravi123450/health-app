{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\image capture\\\\capture image.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ashu = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [ingredients, setIngredients] = useState([]);\n  const [probabilities, setProbabilities] = useState([]);\n  const [mass, setMass] = useState(100);\n  const [nutritionInfo, setNutritionInfo] = useState(null);\n  const [capturing, setCapturing] = useState(false);\n  const webcamRef = React.useRef(null);\n  const captureImage = () => {\n    setCapturing(true);\n    const imageSrc = webcamRef.current.getScreenshot();\n    setImage(imageSrc);\n  };\n  const handleMassChange = e => {\n    setMass(e.target.value);\n  };\n\n  // Convert the base64 string to a Blob and append it to FormData\n  const convertBase64ToBlob = base64 => {\n    const byteCharacters = atob(base64.split(',')[1]);\n    const byteArrays = [];\n    for (let offset = 0; offset < byteCharacters.length; offset += 512) {\n      const slice = byteCharacters.slice(offset, offset + 512);\n      const byteNumbers = Array.from(slice).map(char => char.charCodeAt(0));\n      byteArrays.push(new Uint8Array(byteNumbers));\n    }\n    return new Blob(byteArrays, {\n      type: 'image/jpeg'\n    });\n  };\n  const predictIngredients = async () => {\n    const formData = new FormData();\n    const imageBlob = convertBase64ToBlob(image); // Convert base64 to Blob\n    formData.append('image', imageBlob);\n    try {\n      const response = await axios.post('http://localhost:5001/predict_image', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setIngredients(response.data.ingredients);\n      setProbabilities(response.data.probabilities);\n    } catch (error) {\n      console.error(\"Error in image prediction:\", error);\n    }\n  };\n  const predictNutrition = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/predict_portion', {\n        image: image,\n        mass: mass\n      });\n      setNutritionInfo(response.data);\n    } catch (error) {\n      console.error(\"Error in portion prediction:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Food Nutrient Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), capturing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Captured\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mass (grams):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: mass,\n          onChange: handleMassChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: predictNutrition,\n          children: \"Predict Nutrition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: nutritionInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Nutrition Info:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Protein: \", nutritionInfo.protein]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Fat: \", nutritionInfo.fat]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Carbs: \", nutritionInfo.carbs]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Calories: \", nutritionInfo.calories]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: captureImage,\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Predicted Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [ingredient, \": \", probabilities[index]]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Ashu, \"kgaPzn2l5yUZjf7eo7ZJk3+NM6A=\");\n_c = Ashu;\nexport default Ashu;\nvar _c;\n$RefreshReg$(_c, \"Ashu\");","map":{"version":3,"names":["React","useState","Webcam","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Ashu","_s","image","setImage","ingredients","setIngredients","probabilities","setProbabilities","mass","setMass","nutritionInfo","setNutritionInfo","capturing","setCapturing","webcamRef","useRef","captureImage","imageSrc","current","getScreenshot","handleMassChange","e","target","value","convertBase64ToBlob","base64","byteCharacters","atob","split","byteArrays","offset","length","slice","byteNumbers","Array","from","map","char","charCodeAt","push","Uint8Array","Blob","type","predictIngredients","formData","FormData","imageBlob","append","response","post","headers","data","error","console","predictNutrition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onChange","onClick","protein","fat","carbs","calories","audio","ref","screenshotFormat","width","ingredient","index","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/image capture/capture image.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport axios from 'axios';\r\n\r\nconst Ashu = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [probabilities, setProbabilities] = useState([]);\r\n  const [mass, setMass] = useState(100);\r\n  const [nutritionInfo, setNutritionInfo] = useState(null);\r\n  const [capturing, setCapturing] = useState(false);\r\n\r\n  const webcamRef = React.useRef(null);\r\n\r\n  const captureImage = () => {\r\n    setCapturing(true);\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n    setImage(imageSrc);\r\n  };\r\n\r\n  const handleMassChange = (e) => {\r\n    setMass(e.target.value);\r\n  };\r\n\r\n  // Convert the base64 string to a Blob and append it to FormData\r\n  const convertBase64ToBlob = (base64) => {\r\n    const byteCharacters = atob(base64.split(',')[1]);\r\n    const byteArrays = [];\r\n    for (let offset = 0; offset < byteCharacters.length; offset += 512) {\r\n      const slice = byteCharacters.slice(offset, offset + 512);\r\n      const byteNumbers = Array.from(slice).map((char) => char.charCodeAt(0));\r\n      byteArrays.push(new Uint8Array(byteNumbers));\r\n    }\r\n    return new Blob(byteArrays, { type: 'image/jpeg' });\r\n  };\r\n\r\n  const predictIngredients = async () => {\r\n    const formData = new FormData();\r\n    const imageBlob = convertBase64ToBlob(image);  // Convert base64 to Blob\r\n    formData.append('image', imageBlob);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:5001/predict_image', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      \r\n      setIngredients(response.data.ingredients);\r\n      setProbabilities(response.data.probabilities);\r\n    } catch (error) {\r\n      console.error(\"Error in image prediction:\", error);\r\n    }\r\n  };\r\n\r\n  const predictNutrition = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/predict_portion', {\r\n        image: image,\r\n        mass: mass\r\n      });\r\n      \r\n      setNutritionInfo(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error in portion prediction:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Food Nutrient Prediction</h1>\r\n\r\n      {capturing ? (\r\n        <>\r\n          <img src={image} alt=\"Captured\" />\r\n          <div>\r\n            <label>Mass (grams):</label>\r\n            <input \r\n              type=\"number\" \r\n              value={mass} \r\n              onChange={handleMassChange} \r\n            />\r\n            <button onClick={predictNutrition}>Predict Nutrition</button>\r\n            <div>\r\n              {nutritionInfo && (\r\n                <div>\r\n                  <h3>Nutrition Info:</h3>\r\n                  <p>Protein: {nutritionInfo.protein}</p>\r\n                  <p>Fat: {nutritionInfo.fat}</p>\r\n                  <p>Carbs: {nutritionInfo.carbs}</p>\r\n                  <p>Calories: {nutritionInfo.calories}</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Webcam\r\n          audio={false}\r\n          ref={webcamRef}\r\n          screenshotFormat=\"image/jpeg\"\r\n          width=\"100%\"\r\n        />\r\n      )}\r\n      \r\n      <button onClick={captureImage}>Capture Image</button>\r\n\r\n      <div>\r\n        <h3>Predicted Ingredients:</h3>\r\n        <ul>\r\n          {ingredients.map((ingredient, index) => (\r\n            <li key={index}>{ingredient}: {probabilities[index]}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Ashu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}