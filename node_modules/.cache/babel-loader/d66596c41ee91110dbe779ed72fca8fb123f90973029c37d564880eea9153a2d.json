{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\pages\\\\cal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cali = () => {\n  _s();\n  const [caloriesBurned, setCaloriesBurned] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchCalories = async () => {\n    setLoading(true);\n    setError(null); // Reset error before making the request\n    try {\n      const response = await fetch('http://localhost:5000/get-calories-burned', {\n        method: 'GET',\n        credentials: 'include',\n        // Ensure cookies are included in the request\n        headers: {\n          'Authorization': `Bearer ${document.cookie}` // Send the token from the cookie as a Bearer token\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch calories burned');\n      }\n      const data = await response.json();\n      setCaloriesBurned(data.caloriesBurned);\n    } catch (error) {\n      setError(error.message); // Set error message\n      console.error('Error fetching calories:', error);\n      console.log('Google Access Token:', document.cookie); // Log the cookie content for debugging\n    }\n    setLoading(false);\n  };\n  const handleLoginSuccess = response => {\n    console.log('Login successful', response);\n    // Optionally, handle the login response here (e.g., send the token to the server)\n  };\n  const handleLoginError = () => {\n    setError('Login failed. Please try again.'); // Show error if login fails\n    console.log('Login failed');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Fit Calories Burned\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleLoginSuccess,\n      onError: handleLoginError,\n      usePopup: true // This will open the OAuth flow in a popup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCalories,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Fetch Calories Burned'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), caloriesBurned !== null && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Calories Burned (last 24 hours): \", caloriesBurned, \" kcal\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Cali, \"0LxLYBMdoegf2IaG0k33C6OXNiE=\");\n_c = Cali;\nexport default Cali;\nvar _c;\n$RefreshReg$(_c, \"Cali\");","map":{"version":3,"names":["React","useState","GoogleLogin","jsxDEV","_jsxDEV","Cali","_s","caloriesBurned","setCaloriesBurned","loading","setLoading","error","setError","fetchCalories","response","fetch","method","credentials","headers","document","cookie","ok","Error","data","json","message","console","log","handleLoginSuccess","handleLoginError","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","usePopup","onClick","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/pages/cal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nconst Cali = () => {\r\n  const [caloriesBurned, setCaloriesBurned] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCalories = async () => {\r\n    setLoading(true);\r\n    setError(null); // Reset error before making the request\r\n    try {\r\n      const response = await fetch('http://localhost:5000/get-calories-burned', {\r\n        method: 'GET',\r\n        credentials: 'include', // Ensure cookies are included in the request\r\n        headers: {\r\n          'Authorization': `Bearer ${document.cookie}` // Send the token from the cookie as a Bearer token\r\n        },\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch calories burned');\r\n      }\r\n  \r\n      const data = await response.json();\r\n      setCaloriesBurned(data.caloriesBurned);\r\n    } catch (error) {\r\n      setError(error.message); // Set error message\r\n      console.error('Error fetching calories:', error);\r\n      console.log('Google Access Token:', document.cookie); // Log the cookie content for debugging\r\n\r\n    }\r\n    setLoading(false);\r\n  };\r\n  \r\n\r\n  const handleLoginSuccess = (response) => {\r\n    console.log('Login successful', response);\r\n    // Optionally, handle the login response here (e.g., send the token to the server)\r\n  };\r\n\r\n  const handleLoginError = () => {\r\n    setError('Login failed. Please try again.'); // Show error if login fails\r\n    console.log('Login failed');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Google Fit Calories Burned</h1>\r\n      <GoogleLogin\r\n        onSuccess={handleLoginSuccess}\r\n        onError={handleLoginError}\r\n        usePopup={true} // This will open the OAuth flow in a popup\r\n      />\r\n      <button onClick={fetchCalories} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Fetch Calories Burned'}\r\n      </button>\r\n      {error && <div style={{ color: 'red' }}>{error}</div>}\r\n      {caloriesBurned !== null && !loading && (\r\n        <div>\r\n          <h3>Calories Burned (last 24 hours): {caloriesBurned} kcal</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cali;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}