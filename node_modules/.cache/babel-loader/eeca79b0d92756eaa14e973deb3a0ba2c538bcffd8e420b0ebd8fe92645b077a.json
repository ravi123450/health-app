{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravi\\\\Desktop\\\\GATE-CSE-notes-main\\\\all in one\\\\Health app\\\\health-app\\\\src\\\\image capture\\\\capture image.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Webcam from 'react-webcam';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Ashu = () => {\n  _s();\n  const [image, setImage] = useState(null); // Store the captured image\n  const [ingredients, setIngredients] = useState([]);\n  const [probabilities, setProbabilities] = useState([]);\n  const [mass, setMass] = useState(100); // Default mass value\n  const [nutritionInfo, setNutritionInfo] = useState(null);\n  const [capturing, setCapturing] = useState(false);\n  const webcamRef = React.useRef(null);\n\n  // Capture image from the webcam\n  const captureImage = () => {\n    const imageSrc = webcamRef.current.getScreenshot(); // Get base64 image string\n    console.log(\"Captured image data: \", imageSrc); // Debugging log to print the image data\n    setImage(imageSrc); // Store the captured image in the state\n    setCapturing(true); // Set capturing state to true\n  };\n  const handleMassChange = e => {\n    setMass(e.target.value); // Update the mass value when the user changes it\n  };\n\n  // Handle base64 image to send to backend for prediction\n  const predict = async () => {\n    if (!image) {\n      console.error(\"No image captured.\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5001/predict', {\n        image: image,\n        // Send the base64 image to the backend\n        mass: mass // Send the mass value along with the image\n      });\n      console.log(\"Prediction Response: \", response.data); // Debugging log to print backend response\n\n      setIngredients(response.data.ingredients);\n      setProbabilities(response.data.probabilities);\n      setNutritionInfo(response.data.nutrition);\n    } catch (error) {\n      console.error(\"Error in prediction:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"Food Nutrient Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), capturing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Captured\",\n          className: \"captured-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Mass (grams):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: mass,\n          onChange: handleMassChange // Handle mass change\n          ,\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: predict,\n          children: \"Predict Nutrition and Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nutrition-info\",\n        children: nutritionInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nutrition Info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Protein: \", nutritionInfo.protein]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fat: \", nutritionInfo.fat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Carbs: \", nutritionInfo.carbs]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Calories: \", nutritionInfo.calories]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"webcam-container\",\n      children: /*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: \"100%\",\n        videoConstraints: {\n          facingMode: \"environment\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button capture-btn\",\n      onClick: captureImage,\n      children: \"Capture Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: predict,\n      children: \"Predict Ingredients and Nutrition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients-container\",\n      children: ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"ingredients-list\",\n        children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"ingredient-item\",\n          children: [ingredient, \": \", probabilities[index].toFixed(2), \"% \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ingredients predicted yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => setCapturing(false),\n      children: \"Capture New Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Ashu, \"kgaPzn2l5yUZjf7eo7ZJk3+NM6A=\");\n_c = Ashu;\nexport default Ashu;\nvar _c;\n$RefreshReg$(_c, \"Ashu\");","map":{"version":3,"names":["React","useState","Webcam","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Ashu","_s","image","setImage","ingredients","setIngredients","probabilities","setProbabilities","mass","setMass","nutritionInfo","setNutritionInfo","capturing","setCapturing","webcamRef","useRef","captureImage","imageSrc","current","getScreenshot","console","log","handleMassChange","e","target","value","predict","error","response","post","data","nutrition","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onChange","onClick","protein","fat","carbs","calories","audio","ref","screenshotFormat","width","videoConstraints","facingMode","length","map","ingredient","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/ravi/Desktop/GATE-CSE-notes-main/all in one/Health app/health-app/src/image capture/capture image.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Webcam from 'react-webcam';\r\nimport axios from 'axios';\r\n\r\nconst Ashu = () => {\r\n  const [image, setImage] = useState(null);  // Store the captured image\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [probabilities, setProbabilities] = useState([]);\r\n  const [mass, setMass] = useState(100);  // Default mass value\r\n  const [nutritionInfo, setNutritionInfo] = useState(null);\r\n  const [capturing, setCapturing] = useState(false);\r\n\r\n  const webcamRef = React.useRef(null);\r\n\r\n  // Capture image from the webcam\r\n  const captureImage = () => {\r\n    const imageSrc = webcamRef.current.getScreenshot();  // Get base64 image string\r\n    console.log(\"Captured image data: \", imageSrc);  // Debugging log to print the image data\r\n    setImage(imageSrc);  // Store the captured image in the state\r\n    setCapturing(true);  // Set capturing state to true\r\n  };\r\n\r\n  const handleMassChange = (e) => {\r\n    setMass(e.target.value);  // Update the mass value when the user changes it\r\n  };\r\n\r\n  // Handle base64 image to send to backend for prediction\r\n  const predict = async () => {\r\n    if (!image) {\r\n      console.error(\"No image captured.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5001/predict', {\r\n        image: image,  // Send the base64 image to the backend\r\n        mass: mass     // Send the mass value along with the image\r\n      });\r\n\r\n      console.log(\"Prediction Response: \", response.data);  // Debugging log to print backend response\r\n\r\n      setIngredients(response.data.ingredients);\r\n      setProbabilities(response.data.probabilities);\r\n      setNutritionInfo(response.data.nutrition);\r\n    } catch (error) {\r\n      console.error(\"Error in prediction:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"header\">Food Nutrient Prediction</h1>\r\n\r\n      {/* Display webcam or captured image */}\r\n      {capturing ? (\r\n        <>\r\n          <div className=\"image-container\">\r\n            <img src={image} alt=\"Captured\" className=\"captured-image\" />\r\n          </div>\r\n          <div className=\"input-container\">\r\n            <label>Mass (grams):</label>\r\n            <input \r\n              type=\"number\" \r\n              value={mass} \r\n              onChange={handleMassChange}  // Handle mass change\r\n              className=\"input-field\"\r\n            />\r\n            <button className=\"button\" onClick={predict}>Predict Nutrition and Ingredients</button>\r\n          </div>\r\n          <div className=\"nutrition-info\">\r\n            {nutritionInfo && (\r\n              <div>\r\n                <h3>Nutrition Info:</h3>\r\n                <p>Protein: {nutritionInfo.protein}</p>\r\n                <p>Fat: {nutritionInfo.fat}</p>\r\n                <p>Carbs: {nutritionInfo.carbs}</p>\r\n                <p>Calories: {nutritionInfo.calories}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <div className=\"webcam-container\">\r\n          <Webcam\r\n            audio={false}\r\n            ref={webcamRef}\r\n            screenshotFormat=\"image/jpeg\"\r\n            width=\"100%\"\r\n            videoConstraints={{\r\n              facingMode: \"environment\"\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      {/* Buttons to capture image and predict */}\r\n      <button className=\"button capture-btn\" onClick={captureImage}>Capture Image</button>\r\n      <button className=\"button\" onClick={predict}>Predict Ingredients and Nutrition</button>\r\n\r\n      {/* Display predicted ingredients */}\r\n      <div className=\"ingredients-container\">\r\n        {ingredients.length > 0 ? (\r\n          <ul className=\"ingredients-list\">\r\n            {ingredients.map((ingredient, index) => (\r\n              <li key={index} className=\"ingredient-item\">\r\n                {ingredient}: {probabilities[index].toFixed(2)}% {/* Display probability as percentage */}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No ingredients predicted yet.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Allow the user to capture another image */}\r\n      <button className=\"button\" onClick={() => setCapturing(false)}>Capture New Image</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ashu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}